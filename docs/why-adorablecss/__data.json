{"type":"data","nodes":[null,null,null,{"type":"data","data":[{"title":1,"description":2,"code":3,"frontmatter":4,"css":5},"Why AdorableCSS?","왜 AdorableCSS를 선택해야 하는가","\u003Ch1>🤔 Why AdorableCSS?\u003C/h1>\n\u003Cblockquote class=\"border-l(4/neutral-300) pl(lg) my(xl) italic c(neutral-700)\">\u003Cp>“또 다른 CSS Framework가 왜 필요한가요?”\u003C/p>\n\u003C/blockquote>\n\u003Ch2>📖 우리의 이야기\u003C/h2>\n\u003Ch3>문제: Figma에서 코드로 넘어올 때의 괴리감\u003C/h3>\n\u003Cp>디자이너: “중앙 정렬하고, 간격은 24px로…”\u003Cbr>\n개발자: “그래서… \u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">flex items-center justify-center gap-6\u003C/code>?”\u003C/p>\n\u003Cp>\u003Cstrong>🎯 핵심 통찰\u003C/strong>: 우리는 Figma의 \u003Cstrong>Auto Layout\u003C/strong>으로 생각하지만, \u003Cstrong>Flexbox 속성\u003C/strong>으로 코딩합니다.\u003C/p>\n\u003Ch3>해결책: 사고방식을 그대로 코드로\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- Figma 사고방식 --&gt;\u003C/span>\n&quot;Frame을 중앙 정렬하고 간격 24px&quot;\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- TailwindCSS --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;flex items-center justify-center gap-6&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- AdorableCSS --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(pack) gap(24)&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>차이가 느껴지시나요?\u003C/strong> 🎨\u003C/p>\n\u003Ch2>🏆 AdorableCSS만의 장점\u003C/h2>\n\u003Ch3>1. \u003Cstrong>Figma 네이티브 문법\u003C/strong>\u003C/h3>\n\u003Cdiv class=\"overflow(auto) my(xl)\">\u003Ctable class=\"w(full) r(lg) border(1/neutral-200)\">\u003Cthead>\n\u003Ctr class=\"hover:bg(neutral-50) transition(colors/150ms)\">\u003Cth class=\"bg(neutral-100) px(md) py(sm) text(left) font(semi) c(gray-900) border-b(2/neutral-200)\">Figma\u003C/th>\n\u003Cth class=\"bg(neutral-100) px(md) py(sm) text(left) font(semi) c(gray-900) border-b(2/neutral-200)\">AdorableCSS\u003C/th>\n\u003Cth class=\"bg(neutral-100) px(md) py(sm) text(left) font(semi) c(gray-900) border-b(2/neutral-200)\">설명\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\n\u003Ctr class=\"hover:bg(neutral-50) transition(colors/150ms)\">\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">Auto Layout\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">\u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">hbox()\u003C/code>, \u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">vbox()\u003C/code>\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">직관적인 레이아웃\u003C/td>\n\u003C/tr>\n\u003Ctr class=\"hover:bg(neutral-50) transition(colors/150ms)\">\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">Fill container\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">\u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">w(fill)\u003C/code>\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">컨테이너 채우기\u003C/td>\n\u003C/tr>\n\u003Ctr class=\"hover:bg(neutral-50) transition(colors/150ms)\">\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">Hug contents\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">\u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">w(hug)\u003C/code>\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">컨텐츠에 맞추기\u003C/td>\n\u003C/tr>\n\u003Ctr class=\"hover:bg(neutral-50) transition(colors/150ms)\">\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">Absolute position\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">\u003Ccode class=\"bg(neutral-50) c(primary-700) px(xs) py(0.5) r(sm) border(1/neutral-200) font(mono) text(sm)\">layer()\u003C/code>\u003C/td>\n\u003Ctd class=\"px(md) py(sm) border-b(1/neutral-100)\">레이어 배치\u003C/td>\n\u003C/tr>\n\u003C/tbody>\n\u003C/table>\u003C/div>\u003Ch3>2. \u003Cstrong>의미론적 디자인 시스템\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ TailwindCSS: 매번 같은 조합 반복 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;text-4xl font-bold tracking-tight leading-tight&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h2\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;text-3xl font-bold tracking-tight leading-tight&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h3\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;text-2xl font-semibold tracking-normal leading-normal&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ AdorableCSS: 역할 기반 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(xl)&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h2\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(lg)&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h3\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(md)&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>3. \u003Cstrong>일관된 함수형 문법\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 모든 유틸리티가 동일한 패턴 */\u003C/span>\nname(value)\nname(value1/value2)\nname(key:value)\n\n\u003Cspan class=\"hljs-comment\">/* 예측 가능하고 기억하기 쉬움 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>4. \u003Cstrong>CSS @layer로 특이성 해결\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 자동으로 관리되는 캐스케이드 */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@layer\u003C/span> component, layout, utility, state;\n\n\u003Cspan class=\"hljs-comment\">/* !important 거의 불필요 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>5. \u003Cstrong>더 짧고 읽기 쉬운 코드\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 실제 비교 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-comment\">&lt;!-- TailwindCSS (73자) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;flex items-center justify-between px-6 py-4 bg-white rounded-lg shadow-md&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- AdorableCSS (49자) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(middle) gap(auto) px(lg) py(md) card&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- 33% 더 짧음! --&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>💼 비즈니스 가치\u003C/h2>\n\u003Ch3>개발 속도 향상\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>🚀 디자이너와 개발자 간 소통 시간 50% 단축\u003C/li>\n\u003Cli>🎯 Figma → 코드 변환 시간 70% 단축\u003C/li>\n\u003Cli>📝 코드 리뷰 시간 30% 단축 (더 읽기 쉬운 코드)\u003C/li>\n\u003C/ul>\n\u003Ch3>유지보수성\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>🔍 의미론적 클래스로 의도가 명확함\u003C/li>\n\u003Cli>🏗 일관된 디자인 시스템 적용\u003C/li>\n\u003Cli>📦 더 작은 HTML 파일 크기\u003C/li>\n\u003C/ul>\n\u003Ch3>팀 협업\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>👥 디자이너도 이해할 수 있는 코드\u003C/li>\n\u003Cli>🤝 공통 언어로 소통\u003C/li>\n\u003Cli>📚 학습 곡선 완만\u003C/li>\n\u003C/ul>\n\u003Ch2>🆚 언제 AdorableCSS를 선택해야 할까?\u003C/h2>\n\u003Ch3>✅ AdorableCSS가 적합한 경우\u003C/h3>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>\n\u003Cp>\u003Cstrong>Figma 중심 워크플로우\u003C/strong>\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>디자인 시스템이 Figma에 정의됨\u003C/li>\n\u003Cli>Auto Layout을 적극 활용\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>빠른 프로토타이핑\u003C/strong>\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>직관적인 문법으로 빠른 개발\u003C/li>\n\u003Cli>의미론적 컴포넌트로 일관성\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>팀에 디자이너가 있는 경우\u003C/strong>\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>디자이너도 코드 이해 가능\u003C/li>\n\u003Cli>협업 효율성 증가\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3>⚠️ 다른 선택을 고려해야 할 경우\u003C/h3>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>\n\u003Cp>\u003Cstrong>이미 Tailwind에 깊게 투자한 경우\u003C/strong>\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>점진적 마이그레이션 가능하지만 시간 필요\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>매우 독특한 디자인이 필요한 경우\u003C/strong>\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>커스텀 CSS와 혼용 가능하지만 제한적\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch2>🎯 실제 사례\u003C/h2>\n\u003Ch3>Before (TailwindCSS)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;min-h-screen bg-gray-50 flex items-center justify-center px-4 sm:px-6 lg:px-8&quot;\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;max-w-md w-full space-y-8 bg-white p-6 sm:p-8 rounded-xl shadow-lg&quot;\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h2\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;mt-6 text-center text-3xl font-extrabold text-gray-900&quot;\u003C/span>&gt;\u003C/span>\n      로그인\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h2\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-comment\">&lt;!-- 더 많은 중복... --&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>After (AdorableCSS)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(fill) min-h(screen) bg(gray-50) p(md)&quot;\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;card container(narrow) vbox gap(xl)&quot;\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h2\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(xl) text(center)&quot;\u003C/span>&gt;\u003C/span>로그인\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h2\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-comment\">&lt;!-- 깔끔하고 의미있는 코드 --&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>코드 길이: 50% 감소\u003C/strong>\u003Cbr>\n\u003Cstrong>가독성: 200% 향상\u003C/strong>\u003Cbr>\n\u003Cstrong>의미 전달: 명확함\u003C/strong>\u003C/p>\n\u003Ch2>🚀 시작하기\u003C/h2>\n\u003Ch3>30초 체험\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-bash\">\u003Cspan class=\"hljs-comment\"># CDN으로 바로 시작\u003C/span>\n&lt;\u003Cspan class=\"hljs-built_in\">link\u003C/span> rel=\u003Cspan class=\"hljs-string\">&quot;stylesheet&quot;\u003C/span> href=\u003Cspan class=\"hljs-string\">&quot;https://unpkg.com/adorable-css/dist/adorable.css&quot;\u003C/span>&gt;\n\u003C/code>\u003C/pre>\n\u003Ch3>점진적 도입\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 기존 프로젝트에 추가\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">// Tailwind와 함께 사용 가능!\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>팀 설득하기\u003C/h3>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>작은 컴포넌트부터 AdorableCSS로 작성\u003C/li>\n\u003Cli>코드 리뷰에서 가독성 차이 보여주기\u003C/li>\n\u003Cli>개발 속도 측정 및 공유\u003C/li>\n\u003C/ol>\n\u003Ch2>💭 자주 묻는 질문\u003C/h2>\n\u003Cp>\u003Cstrong>Q: Tailwind와 뭐가 다른가요?\u003C/strong>\u003Cbr>\nA: 철학이 다릅니다. Tailwind는 “유틸리티 우선”, AdorableCSS는 &quot;사고방식 우선&quot;입니다.\u003C/p>\n\u003Cp>\u003Cstrong>Q: 프로덕션에서 사용할 수 있나요?\u003C/strong>\u003Cbr>\nA: 네! 이미 여러 프로덕션 환경에서 사용 중입니다.\u003C/p>\n\u003Cp>\u003Cstrong>Q: 번들 크기는 어떤가요?\u003C/strong>\u003Cbr>\nA: Core: 34KB (gzipped), 대부분의 프로젝트에서 Tailwind보다 작습니다.\u003C/p>\n\u003Cp>\u003Cstrong>Q: 커스터마이징이 가능한가요?\u003C/strong>\u003Cbr>\nA: 네! 토큰 시스템, 플러그인, 커스텀 규칙 모두 지원합니다.\u003C/p>\n\u003Ch2>🎬 결론\u003C/h2>\n\u003Cp>AdorableCSS는 단순한 CSS Framework가 아닙니다.\u003Cbr>\n\u003Cstrong>디자이너와 개발자를 연결하는 다리\u003C/strong>입니다.\u003C/p>\n\u003Cblockquote class=\"border-l(4/neutral-300) pl(lg) my(xl) italic c(neutral-700)\">\u003Cp>“Write CSS the way you think in Figma”\u003C/p>\n\u003C/blockquote>\n\u003Chr>\n\u003Ch3>🔗 다음 단계\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>🎮 \u003Cstrong>\u003Ca href=\"/docs/getting-started\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">5분 안에 시작하기\u003C/a>\u003C/strong>\u003C/li>\n\u003Cli>🔄 \u003Cstrong>\u003Ca href=\"/docs/migration-tailwind\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">TailwindCSS에서 마이그레이션\u003C/a>\u003C/strong>\u003C/li>\n\u003Cli>💬 \u003Cstrong>\u003Ca href=\"https://github.com/adorablecss/adorable-css-v2/discussions\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">커뮤니티 참여하기\u003C/a>\u003C/strong>\u003C/li>\n\u003Cli>📺 \u003Cstrong>\u003Ca href=\"https://youtube.com/adorablecss\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">데모 영상 보기\u003C/a>\u003C/strong> (준비 중)\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>우리와 함께 더 나은 CSS 경험을 만들어가요! 🚀\u003C/strong>\u003C/p>\n",{},"\n      /* Highlight.js Light Theme inspired by GitHub */\n      .hljs { background: rgb(249 250 251); color: #24292e; }\n      .hljs-comment, .hljs-quote { color: #6a737d; }\n      .hljs-keyword, .hljs-selector-tag, .hljs-literal { color: #d73a49; }\n      .hljs-string { color: #032f62; }\n      .hljs-number { color: #005cc5; }\n      .hljs-variable, .hljs-template-variable, .hljs-attr { color: #e36209; }\n      .hljs-name, .hljs-selector-class, .hljs-selector-id { color: #22863a; }\n      .hljs-title, .hljs-function { color: #6f42c1; }\n      .hljs-built_in { color: #005cc5; }\n      .hljs-params { color: #24292e; }\n      .hljs-meta { color: #005cc5; }\n      .hljs-emphasis { font-style: italic; }\n      .hljs-strong { font-weight: bold; }\n      .hljs-deletion { color: #b31d28; background-color: #ffeef0; }\n      .hljs-addition { color: #22863a; background-color: #f0fff4; }\n      \n      /* Code blocks */\n      pre { \n        background-color: rgb(249 250 251);\n        border: 1px solid rgb(229 231 235);\n      }\n      \n      /* Copy button */\n      .copy-btn {\n        background-color: rgb(243 244 246);\n        border: 1px solid rgb(209 213 219);\n        color: rgb(55 65 81);\n      }\n      .copy-btn:hover {\n        background-color: rgb(229 231 235);\n      }\n    "],"uses":{"params":["slug"]}}]}
