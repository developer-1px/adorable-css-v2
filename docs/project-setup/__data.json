{"type":"data","nodes":[null,null,{"type":"data","data":[{"title":1,"description":2,"code":3,"frontmatter":4,"css":5},"프로젝트 설정","프로젝트 초기 설정 가이드","\u003Ch1>🚀 프로젝트 설정 가이드\u003C/h1>\n\u003Cblockquote class=\"border-l(4/gray-300) pl(lg) my(xl) italic c(gray-700)\">\u003Cp>새 프로젝트에서 AdorableCSS 시작하기\u003C/p>\n\u003C/blockquote>\n\u003Ch2>📋 Quick Setup\u003C/h2>\n\u003Ch3>1분 설정 (CDN)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-meta\">&lt;!DOCTYPE \u003Cspan class=\"hljs-keyword\">html\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">head\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">link\u003C/span> \u003Cspan class=\"hljs-attr\">rel\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;stylesheet&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">href\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;https://unpkg.com/adorable-css/dist/adorable.css&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">head\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(pack) min-h(screen)&quot;\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(xl)&quot;\u003C/span>&gt;\u003C/span>Hello AdorableCSS!\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>5분 설정 (NPM/Yarn/PNPM)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-bash\">\u003Cspan class=\"hljs-comment\"># NPM\u003C/span>\nnpm install adorable-css\n\n\u003Cspan class=\"hljs-comment\"># Yarn\u003C/span>\nyarn add adorable-css\n\n\u003Cspan class=\"hljs-comment\"># PNPM (추천)\u003C/span>\npnpm add adorable-css\n\u003C/code>\u003C/pre>\n\u003Ch2>🔧 프레임워크별 설정\u003C/h2>\n\u003Ch3>Next.js 14+\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// app/layout.tsx\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">default\u003C/span> \u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">RootLayout\u003C/span>(\u003Cspan class=\"hljs-params\">{ children }\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">html\u003C/span> \u003Cspan class=\"hljs-attr\">lang\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;ko&quot;\u003C/span>&gt;\u003C/span>\n      \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>{children}\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n}\n\u003C/code>\u003C/pre>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// next.config.js\u003C/span>\n\u003Cspan class=\"hljs-comment\">/** \u003Cspan class=\"hljs-doctag\">@type\u003C/span> {\u003Cspan class=\"hljs-type\">import(&#x27;next&#x27;).NextConfig\u003C/span>} */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> nextConfig = {\n  \u003Cspan class=\"hljs-comment\">// CSS 최적화\u003C/span>\n  \u003Cspan class=\"hljs-attr\">compiler\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">removeConsole\u003C/span>: process.\u003Cspan class=\"hljs-property\">env\u003C/span>.\u003Cspan class=\"hljs-property\">NODE_ENV\u003C/span> === \u003Cspan class=\"hljs-string\">&#x27;production&#x27;\u003C/span>,\n  },\n}\n\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = nextConfig\n\u003C/code>\u003C/pre>\n\u003Ch3>Vite + React\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// main.tsx\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-title class_\">React\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;react&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;react-dom/client&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>  \u003Cspan class=\"hljs-comment\">// 최상단에 import\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-title class_\">App\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;./App&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span>.\u003Cspan class=\"hljs-title function_\">createRoot\u003C/span>(\u003Cspan class=\"hljs-variable language_\">document\u003C/span>.\u003Cspan class=\"hljs-title function_\">getElementById\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;root&#x27;\u003C/span>)!).\u003Cspan class=\"hljs-title function_\">render\u003C/span>(\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">React.StrictMode\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">App\u003C/span> /&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">React.StrictMode\u003C/span>&gt;\u003C/span>\u003C/span>\n)\n\u003C/code>\u003C/pre>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// vite.config.ts\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { defineConfig } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;vite&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> react \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;@vitejs/plugin-react&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">default\u003C/span> \u003Cspan class=\"hljs-title function_\">defineConfig\u003C/span>({\n  \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\u003Cspan class=\"hljs-title function_\">react\u003C/span>()],\n  \u003Cspan class=\"hljs-attr\">css\u003C/span>: {\n    \u003Cspan class=\"hljs-comment\">// PostCSS 설정 (선택사항)\u003C/span>\n    \u003Cspan class=\"hljs-attr\">postcss\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;./postcss.config.js&#x27;\u003C/span>\n  }\n})\n\u003C/code>\u003C/pre>\n\u003Ch3>SvelteKit\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// app.html\u003C/span>\n&lt;link rel=\u003Cspan class=\"hljs-string\">&quot;stylesheet&quot;\u003C/span> href=\u003Cspan class=\"hljs-string\">&quot;%sveltekit.assets%/adorable.css&quot;\u003C/span>&gt;\n\n\u003Cspan class=\"hljs-comment\">// 또는 app.css\u003C/span>\n@\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>;\n\u003C/code>\u003C/pre>\n\u003Ch3>Vue 3\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// main.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { createApp } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;vue&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-title class_\">App\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;./App.vue&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-title function_\">createApp\u003C/span>(\u003Cspan class=\"hljs-title class_\">App\u003C/span>).\u003Cspan class=\"hljs-title function_\">mount\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;#app&#x27;\u003C/span>)\n\u003C/code>\u003C/pre>\n\u003Ch2>📁 권장 프로젝트 구조\u003C/h2>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-text\">my-adorable-project/\n├── src/\n│   ├── components/\n│   │   ├── common/      # 공통 컴포넌트\n│   │   ├── layout/      # 레이아웃 컴포넌트\n│   │   └── features/    # 기능별 컴포넌트\n│   ├── styles/\n│   │   ├── adorable-overrides.css  # 커스텀 오버라이드\n│   │   └── themes/      # 테마 파일들\n│   └── utils/\n│       └── adorable-helpers.js  # 유틸리티 함수\n├── public/\n├── docs/\n│   └── ADORABLE_CONVENTIONS.md  # 팀 컨벤션\n└── package.json\n\u003C/code>\u003C/pre>\n\u003Ch2>🎨 커스터마이징\u003C/h2>\n\u003Ch3>1. CSS 변수로 테마 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* styles/adorable-overrides.css */\u003C/span>\n\u003Cspan class=\"hljs-selector-pseudo\">:root\u003C/span> {\n  \u003Cspan class=\"hljs-comment\">/* 색상 오버라이드 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--adorable-primary\u003C/span>: \u003Cspan class=\"hljs-number\">#667eea\u003C/span>;\n  \u003Cspan class=\"hljs-attr\">--adorable-secondary\u003C/span>: \u003Cspan class=\"hljs-number\">#f687b3\u003C/span>;\n  \n  \u003Cspan class=\"hljs-comment\">/* 간격 커스터마이징 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--adorable-space-md\u003C/span>: \u003Cspan class=\"hljs-number\">1.5rem\u003C/span>;\n  \n  \u003Cspan class=\"hljs-comment\">/* 그림자 커스터마이징 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--adorable-shadow-md\u003C/span>: \u003Cspan class=\"hljs-number\">0\u003C/span> \u003Cspan class=\"hljs-number\">4px\u003C/span> \u003Cspan class=\"hljs-number\">6px\u003C/span> -\u003Cspan class=\"hljs-number\">1px\u003C/span> \u003Cspan class=\"hljs-built_in\">rgba\u003C/span>(\u003Cspan class=\"hljs-number\">0\u003C/span>, \u003Cspan class=\"hljs-number\">0\u003C/span>, \u003Cspan class=\"hljs-number\">0\u003C/span>, \u003Cspan class=\"hljs-number\">0.1\u003C/span>);\n}\n\n\u003Cspan class=\"hljs-comment\">/* 다크 모드 */\u003C/span>\n\u003Cspan class=\"hljs-selector-attr\">[data-theme=\u003Cspan class=\"hljs-string\">&quot;dark&quot;\u003C/span>]\u003C/span> {\n  \u003Cspan class=\"hljs-attr\">--adorable-bg-base\u003C/span>: \u003Cspan class=\"hljs-number\">#1a202c\u003C/span>;\n  \u003Cspan class=\"hljs-attr\">--adorable-text-base\u003C/span>: \u003Cspan class=\"hljs-number\">#f7fafc\u003C/span>;\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 커스텀 유틸리티 추가\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 프로젝트 특화 유틸리티 */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@layer\u003C/span> utilities {\n  \u003Cspan class=\"hljs-selector-class\">.gradient-brand\u003C/span> {\n    \u003Cspan class=\"hljs-attribute\">background\u003C/span>: \u003Cspan class=\"hljs-built_in\">linear-gradient\u003C/span>(\u003Cspan class=\"hljs-number\">135deg\u003C/span>, \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-primary) \u003Cspan class=\"hljs-number\">0%\u003C/span>, \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-secondary) \u003Cspan class=\"hljs-number\">100%\u003C/span>);\n  }\n  \n  \u003Cspan class=\"hljs-selector-class\">.animate-float\u003C/span> {\n    \u003Cspan class=\"hljs-attribute\">animation\u003C/span>: float \u003Cspan class=\"hljs-number\">3s\u003C/span> ease-in-out infinite;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\">@keyframes\u003C/span> float {\n  \u003Cspan class=\"hljs-number\">0%\u003C/span>, \u003Cspan class=\"hljs-number\">100%\u003C/span> { \u003Cspan class=\"hljs-attribute\">transform\u003C/span>: \u003Cspan class=\"hljs-built_in\">translateY\u003C/span>(\u003Cspan class=\"hljs-number\">0\u003C/span>); }\n  \u003Cspan class=\"hljs-number\">50%\u003C/span> { \u003Cspan class=\"hljs-attribute\">transform\u003C/span>: \u003Cspan class=\"hljs-built_in\">translateY\u003C/span>(-\u003Cspan class=\"hljs-number\">10px\u003C/span>); }\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 컴포넌트 프리셋\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// utils/adorable-helpers.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> componentPresets = {\n  \u003Cspan class=\"hljs-comment\">// 버튼 프리셋\u003C/span>\n  \u003Cspan class=\"hljs-attr\">button\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">primary\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;btn bg(blue-500) c(white) hover:bg(blue-600)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">secondary\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;btn ring(1/gray-300) hover:bg(gray-50)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">danger\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;btn bg(red-500) c(white) hover:bg(red-600)&#x27;\u003C/span>\n  },\n  \n  \u003Cspan class=\"hljs-comment\">// 카드 프리셋\u003C/span>\n  \u003Cspan class=\"hljs-attr\">card\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">default\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;card p(xl)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">compact\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;card p(md)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">interactive\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;card hover:shadow(xl) transition cursor(pointer)&#x27;\u003C/span>\n  }\n}\n\n\u003Cspan class=\"hljs-comment\">// 사용 예\u003C/span>\n&lt;button \u003Cspan class=\"hljs-keyword\">class\u003C/span>={componentPresets.\u003Cspan class=\"hljs-property\">button\u003C/span>.\u003Cspan class=\"hljs-property\">primary\u003C/span>}&gt;\n  클릭하세요\n&lt;/button&gt;\n\u003C/code>\u003C/pre>\n\u003Ch2>🔌 도구 통합\u003C/h2>\n\u003Ch3>VS Code 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-comment\">// .vscode/settings.json\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;css.customData&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;.vscode/adorable-css-data.json&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;editor.quickSuggestions&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;strings&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;tailwindCSS.experimental.classRegex&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;class=\\&quot;([^\\&quot;]*)\\&quot;&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span> \u003Cspan class=\"hljs-string\">&quot;([a-zA-Z0-9\\\\-:()/.]+)&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>ESLint 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// .eslintrc.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">rules\u003C/span>: {\n    \u003Cspan class=\"hljs-comment\">// 클래스명 정렬 규칙\u003C/span>\n    \u003Cspan class=\"hljs-string\">&#x27;adorable/class-order&#x27;\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;warn&#x27;\u003C/span>, {\n      \u003Cspan class=\"hljs-attr\">order\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;layout&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;sizing&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;styling&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;state&#x27;\u003C/span>]\n    }]\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>Prettier 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// .prettierrc\u003C/span>\n{\n  \u003Cspan class=\"hljs-string\">&quot;plugins&quot;\u003C/span>: [\u003Cspan class=\"hljs-string\">&quot;prettier-plugin-organize-attributes&quot;\u003C/span>],\n  \u003Cspan class=\"hljs-string\">&quot;attributeGroups&quot;\u003C/span>: [\n    \u003Cspan class=\"hljs-string\">&quot;^class$&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;^(id|name)$&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;$DEFAULT&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;^aria-&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;^data-&quot;\u003C/span>\n  ]\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>📦 프로덕션 최적화\u003C/h2>\n\u003Ch3>1. PurgeCSS 설정 (선택사항)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// postcss.config.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\n    \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;@fullhuman/postcss-purgecss&#x27;\u003C/span>)({\n      \u003Cspan class=\"hljs-attr\">content\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;./src/**/*.{js,jsx,ts,tsx,vue,svelte}&#x27;\u003C/span>],\n      \u003Cspan class=\"hljs-attr\">safelist\u003C/span>: {\n        \u003Cspan class=\"hljs-comment\">// 동적 클래스 보호\u003C/span>\n        \u003Cspan class=\"hljs-attr\">deep\u003C/span>: [\u003Cspan class=\"hljs-regexp\">/^hover:/\u003C/span>, \u003Cspan class=\"hljs-regexp\">/^focus:/\u003C/span>, \u003Cspan class=\"hljs-regexp\">/^group-/\u003C/span>]\n      }\n    })\n  ]\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 빌드 최적화\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-comment\">// package.json\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;scripts&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;vite build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;build:analyze&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ANALYZE=true vite build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;build:prod&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;NODE_ENV=production vite build --minify&quot;\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>3. CDN 캐싱\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 버전 고정 (권장) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">link\u003C/span> \u003Cspan class=\"hljs-attr\">rel\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;stylesheet&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">href\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;https://unpkg.com/adorable-css@2.0.0/dist/adorable.min.css&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- 최신 버전 (개발용) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">link\u003C/span> \u003Cspan class=\"hljs-attr\">rel\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;stylesheet&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">href\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;https://unpkg.com/adorable-css/dist/adorable.css&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🧪 테스트 설정\u003C/h2>\n\u003Ch3>컴포넌트 테스트\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// Button.test.jsx\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { render } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;@testing-library/react&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { \u003Cspan class=\"hljs-title class_\">Button\u003C/span> } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;./Button&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-title function_\">test\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;renders with adorable classes&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> {\n  \u003Cspan class=\"hljs-keyword\">const\u003C/span> { container } = \u003Cspan class=\"hljs-title function_\">render\u003C/span>(\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">Button\u003C/span> \u003Cspan class=\"hljs-attr\">variant\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;primary&quot;\u003C/span>&gt;\u003C/span>Click me\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">Button\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n  \n  \u003Cspan class=\"hljs-title function_\">expect\u003C/span>(container.\u003Cspan class=\"hljs-property\">firstChild\u003C/span>).\u003Cspan class=\"hljs-title function_\">toHaveClass\u003C/span>(\n    \u003Cspan class=\"hljs-string\">&#x27;btn&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;bg(blue-500)&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;c(white)&#x27;\u003C/span>\n  )\n})\n\u003C/code>\u003C/pre>\n\u003Ch3>시각적 회귀 테스트\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// .storybook/preview.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> parameters = {\n  \u003Cspan class=\"hljs-attr\">backgrounds\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">values\u003C/span>: [\n      { \u003Cspan class=\"hljs-attr\">name\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;adorable-light&#x27;\u003C/span>, \u003Cspan class=\"hljs-attr\">value\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;#f7fafc&#x27;\u003C/span> },\n      { \u003Cspan class=\"hljs-attr\">name\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;adorable-dark&#x27;\u003C/span>, \u003Cspan class=\"hljs-attr\">value\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;#1a202c&#x27;\u003C/span> }\n    ]\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>📱 반응형 전략\u003C/h2>\n\u003Ch3>모바일 우선 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// adorable.config.js (계획 중)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">default\u003C/span> {\n  \u003Cspan class=\"hljs-attr\">breakpoints\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">sm\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;640px&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">md\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;768px&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">lg\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;1024px&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">xl\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;1280px&#x27;\u003C/span>\n  },\n  \u003Cspan class=\"hljs-attr\">defaultBreakpoint\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;mobile-first&#x27;\u003C/span>\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>반응형 컴포넌트 예시\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-jsx\">\u003Cspan class=\"hljs-comment\">// ResponsiveLayout.jsx\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">ResponsiveLayout\u003C/span>(\u003Cspan class=\"hljs-params\">{ children }\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;\n      vbox                    // 모바일: 세로 정렬\n      md:hbox                 // 태블릿: 가로 정렬\n      gap(md)                 // 기본 간격\n      lg:gap(xl)              // 데스크톱: 넓은 간격\n      p(md)                   // 기본 패딩\n      md:p(xl)                // 태블릿: 큰 패딩\n    &quot;\u003C/span>&gt;\u003C/span>\n      {children}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>✅ 프로젝트 체크리스트\u003C/h2>\n\u003Ch3>초기 설정\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>[ ] AdorableCSS 설치\u003C/li>\n\u003Cli>[ ] 기본 import 설정\u003C/li>\n\u003Cli>[ ] 테마 변수 정의\u003C/li>\n\u003Cli>[ ] VS Code 설정\u003C/li>\n\u003C/ul>\n\u003Ch3>개발 환경\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>[ ] 린터 규칙 설정\u003C/li>\n\u003Cli>[ ] 포맷터 설정\u003C/li>\n\u003Cli>[ ] Git hooks 설정\u003C/li>\n\u003Cli>[ ] 컴포넌트 라이브러리 구축\u003C/li>\n\u003C/ul>\n\u003Ch3>프로덕션 준비\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>[ ] 빌드 최적화\u003C/li>\n\u003Cli>[ ] 번들 크기 분석\u003C/li>\n\u003Cli>[ ] 성능 테스트\u003C/li>\n\u003Cli>[ ] 배포 파이프라인\u003C/li>\n\u003C/ul>\n\u003Ch2>🔗 다음 단계\u003C/h2>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Ca href=\"/docs/team-onboarding\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">팀 온보딩 가이드\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/docs/best-practices\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">Best Practices\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/developer-1px/adorable-css-v2/blob/main/packages/homepage-kit/docs/guides/performance.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">성능 최적화\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/docs/troubleshooting\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">트러블슈팅\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>\u003Cstrong>💡 Tip\u003C/strong>: 프로젝트 초기에 충분한 시간을 투자하세요. 좋은 설정은 개발 속도를 2배로 만듭니다!\u003C/p>\n",{},"\n      /* Highlight.js Light Theme inspired by GitHub */\n      .hljs { background: rgb(249 250 251); color: #24292e; }\n      .hljs-comment, .hljs-quote { color: #6a737d; }\n      .hljs-keyword, .hljs-selector-tag, .hljs-literal { color: #d73a49; }\n      .hljs-string { color: #032f62; }\n      .hljs-number { color: #005cc5; }\n      .hljs-variable, .hljs-template-variable, .hljs-attr { color: #e36209; }\n      .hljs-name, .hljs-selector-class, .hljs-selector-id { color: #22863a; }\n      .hljs-title, .hljs-function { color: #6f42c1; }\n      .hljs-built_in { color: #005cc5; }\n      .hljs-params { color: #24292e; }\n      .hljs-meta { color: #005cc5; }\n      .hljs-emphasis { font-style: italic; }\n      .hljs-strong { font-weight: bold; }\n      .hljs-deletion { color: #b31d28; background-color: #ffeef0; }\n      .hljs-addition { color: #22863a; background-color: #f0fff4; }\n      \n      /* Code blocks */\n      pre { \n        background-color: rgb(249 250 251);\n        border: 1px solid rgb(229 231 235);\n      }\n      \n      /* Copy button */\n      .copy-btn {\n        background-color: rgb(243 244 246);\n        border: 1px solid rgb(209 213 219);\n        color: rgb(55 65 81);\n      }\n      .copy-btn:hover {\n        background-color: rgb(229 231 235);\n      }\n    "],"uses":{"params":["slug"]}}]}
