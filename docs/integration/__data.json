{"type":"data","nodes":[null,null,null,{"type":"data","data":[{"title":1,"description":2,"code":3,"frontmatter":4,"css":5},"통합 가이드","다른 도구들과의 통합","\u003Ch1>🔌 통합 가이드\u003C/h1>\n\u003Cblockquote class=\"border-l(4/neutral-300) pl(lg) my(xl) italic c(neutral-700)\">\u003Cp>AdorableCSS와 다른 도구들의 조화로운 공존\u003C/p>\n\u003C/blockquote>\n\u003Ch2>🎯 Overview\u003C/h2>\n\u003Cp>AdorableCSS는 독립적으로도 훌륭하지만, 기존 도구들과 함께 사용할 때 더욱 강력해집니다.\u003C/p>\n\u003Ch2>🛠 빌드 도구 통합\u003C/h2>\n\u003Ch3>Webpack\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// webpack.config.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">module\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">rules\u003C/span>: [\n      {\n        \u003Cspan class=\"hljs-attr\">test\u003C/span>: \u003Cspan class=\"hljs-regexp\">/\\.css$/\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">use\u003C/span>: [\n          \u003Cspan class=\"hljs-string\">&#x27;style-loader&#x27;\u003C/span>,\n          \u003Cspan class=\"hljs-string\">&#x27;css-loader&#x27;\u003C/span>,\n          {\n            \u003Cspan class=\"hljs-attr\">loader\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;postcss-loader&#x27;\u003C/span>,\n            \u003Cspan class=\"hljs-attr\">options\u003C/span>: {\n              \u003Cspan class=\"hljs-attr\">postcssOptions\u003C/span>: {\n                \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\n                  \u003Cspan class=\"hljs-comment\">// AdorableCSS PostCSS 플러그인 (개발 중)\u003C/span>\n                  \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;adorable-css/postcss&#x27;\u003C/span>)\n                ]\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>Vite\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// vite.config.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { defineConfig } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;vite&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { adorableCSS } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css/vite&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">default\u003C/span> \u003Cspan class=\"hljs-title function_\">defineConfig\u003C/span>({\n  \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\n    \u003Cspan class=\"hljs-title function_\">adorableCSS\u003C/span>({\n      \u003Cspan class=\"hljs-comment\">// 옵션\u003C/span>\n      \u003Cspan class=\"hljs-attr\">purge\u003C/span>: process.\u003Cspan class=\"hljs-property\">env\u003C/span>.\u003Cspan class=\"hljs-property\">NODE_ENV\u003C/span> === \u003Cspan class=\"hljs-string\">&#x27;production&#x27;\u003C/span>,\n      \u003Cspan class=\"hljs-attr\">themes\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;light&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;dark&#x27;\u003C/span>]\n    })\n  ],\n  \u003Cspan class=\"hljs-attr\">css\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">modules\u003C/span>: {\n      \u003Cspan class=\"hljs-comment\">// CSS Modules와 함께 사용\u003C/span>\n      \u003Cspan class=\"hljs-attr\">localsConvention\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;camelCase&#x27;\u003C/span>\n    }\n  }\n})\n\u003C/code>\u003C/pre>\n\u003Ch3>Parcel\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-comment\">// package.json\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;adorable-css&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;purge&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;themes&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;light&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span> \u003Cspan class=\"hljs-string\">&quot;dark&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// .parcelrc\u003C/span>\n{\n  \u003Cspan class=\"hljs-string\">&quot;extends&quot;\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;@parcel/config-default&quot;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&quot;transformers&quot;\u003C/span>: {\n    \u003Cspan class=\"hljs-string\">&quot;*.css&quot;\u003C/span>: [\u003Cspan class=\"hljs-string\">&quot;@parcel/transformer-css&quot;\u003C/span>, \u003Cspan class=\"hljs-string\">&quot;adorable-css/parcel&quot;\u003C/span>]\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>🎨 CSS 프레임워크 공존\u003C/h2>\n\u003Ch3>TailwindCSS와 함께\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// tailwind.config.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">prefix\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;tw-&#x27;\u003C/span>,  \u003Cspan class=\"hljs-comment\">// Tailwind 클래스에 prefix 추가\u003C/span>\n  \u003Cspan class=\"hljs-attr\">content\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;./src/**/*.{js,jsx,ts,tsx}&#x27;\u003C/span>],\n  \u003Cspan class=\"hljs-attr\">theme\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">extend\u003C/span>: {\n      \u003Cspan class=\"hljs-comment\">// AdorableCSS 토큰 재사용\u003C/span>\n      \u003Cspan class=\"hljs-attr\">colors\u003C/span>: {\n        \u003Cspan class=\"hljs-attr\">primary\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;var(--adorable-primary)&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">secondary\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;var(--adorable-secondary)&#x27;\u003C/span>\n      }\n    }\n  }\n}\n\u003C/code>\u003C/pre>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 혼용 예시 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;\n  card                    &lt;!-- AdorableCSS --&gt;\n  tw-backdrop-blur-lg     &lt;!-- TailwindCSS --&gt;\n  hbox(pack)              &lt;!-- AdorableCSS --&gt;\n&quot;\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(xl) tw-tracking-tight&quot;\u003C/span>&gt;\u003C/span>\n    두 프레임워크의 장점 활용\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>Bootstrap과 함께\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-scss\">\u003Cspan class=\"hljs-comment\">// custom-bootstrap.scss\u003C/span>\n\u003Cspan class=\"hljs-comment\">// Bootstrap 변수를 AdorableCSS 토큰으로 오버라이드\u003C/span>\n\u003Cspan class=\"hljs-variable\">$primary\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-blue-\u003Cspan class=\"hljs-number\">500\u003C/span>);\n\u003Cspan class=\"hljs-variable\">$secondary\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-gray-\u003Cspan class=\"hljs-number\">500\u003C/span>);\n\u003Cspan class=\"hljs-variable\">$border-radius\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-radius-md);\n\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;bootstrap/scss/bootstrap&#x27;\u003C/span>;\n\u003C/code>\u003C/pre>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 클래스 네임스페이스 분리 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;container&quot;\u003C/span>&gt;\u003C/span>          \u003Cspan class=\"hljs-comment\">&lt;!-- Bootstrap --&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(pack) gap(lg)&quot;\u003C/span>&gt;\u003C/span>  \u003Cspan class=\"hljs-comment\">&lt;!-- AdorableCSS --&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">button\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;btn btn-primary&quot;\u003C/span>&gt;\u003C/span>Bootstrap 버튼\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">button\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">button\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;btn bg(blue-500) c(white)&quot;\u003C/span>&gt;\u003C/span>AdorableCSS 버튼\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">button\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🔧 PostCSS 생태계\u003C/h2>\n\u003Ch3>PostCSS 플러그인 체인\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// postcss.config.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\n    \u003Cspan class=\"hljs-comment\">// 1. Import 처리\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;postcss-import&#x27;\u003C/span>),\n    \n    \u003Cspan class=\"hljs-comment\">// 2. AdorableCSS 처리\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;adorable-css/postcss&#x27;\u003C/span>),\n    \n    \u003Cspan class=\"hljs-comment\">// 3. 중첩 해제\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;postcss-nested&#x27;\u003C/span>),\n    \n    \u003Cspan class=\"hljs-comment\">// 4. 자동 프리픽서\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;autoprefixer&#x27;\u003C/span>),\n    \n    \u003Cspan class=\"hljs-comment\">// 5. 최적화 (프로덕션)\u003C/span>\n    process.\u003Cspan class=\"hljs-property\">env\u003C/span>.\u003Cspan class=\"hljs-property\">NODE_ENV\u003C/span> === \u003Cspan class=\"hljs-string\">&#x27;production&#x27;\u003C/span> &amp;&amp; \u003Cspan class=\"hljs-built_in\">require\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;cssnano&#x27;\u003C/span>)\n  ].\u003Cspan class=\"hljs-title function_\">filter\u003C/span>(\u003Cspan class=\"hljs-title class_\">Boolean\u003C/span>)\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>커스텀 PostCSS 플러그인\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// postcss-adorable-custom.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">opts = {}\u003C/span>) =&gt;\u003C/span> {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> {\n    \u003Cspan class=\"hljs-attr\">postcssPlugin\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;postcss-adorable-custom&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-title class_\">Once\u003C/span>(root, { result }) {\n      \u003Cspan class=\"hljs-comment\">// AdorableCSS 클래스를 감지하고 변환\u003C/span>\n      root.\u003Cspan class=\"hljs-title function_\">walkRules\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">rule\u003C/span> =&gt;\u003C/span> {\n        \u003Cspan class=\"hljs-keyword\">if\u003C/span> (rule.\u003Cspan class=\"hljs-property\">selector\u003C/span>.\u003Cspan class=\"hljs-title function_\">includes\u003C/span>(\u003Cspan class=\"hljs-params\">\u003Cspan class=\"hljs-string\">&#x27;hbox(&#x27;\u003C/span>\u003C/span>)) {\n          \u003Cspan class=\"hljs-comment\">// 커스텀 로직\u003C/span>\n        }\n      })\n    }\n  }\n}\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span>.\u003Cspan class=\"hljs-property\">postcss\u003C/span> = \u003Cspan class=\"hljs-literal\">true\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🎯 CSS-in-JS 라이브러리\u003C/h2>\n\u003Ch3>Styled Components\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-keyword\">import\u003C/span> styled \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;styled-components&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { cx } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">// AdorableCSS 클래스를 styled components에 적용\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title class_\">Card\u003C/span> = styled.\u003Cspan class=\"hljs-property\">div\u003C/span>.\u003Cspan class=\"hljs-title function_\">attrs\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">props\u003C/span> =&gt;\u003C/span> ({\n  \u003Cspan class=\"hljs-attr\">className\u003C/span>: \u003Cspan class=\"hljs-title function_\">cx\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;card&#x27;\u003C/span>, props.\u003Cspan class=\"hljs-property\">interactive\u003C/span> &amp;&amp; \u003Cspan class=\"hljs-string\">&#x27;hover:shadow(xl)&#x27;\u003C/span>)\n}))\u003Cspan class=\"hljs-string\">`\n  /* 추가 스타일 */\n  \u003Cspan class=\"hljs-subst\">${props =&gt; props.featured &amp;&amp; \u003Cspan class=\"hljs-string\">`\n    border: 2px solid var(--adorable-blue-500);\n  `\u003C/span>}\u003C/span>\n`\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">// 사용\u003C/span>\n&lt;\u003Cspan class=\"hljs-title class_\">Card\u003C/span> interactive featured&gt;\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h2\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(md)&quot;\u003C/span>&gt;\u003C/span>하이브리드 접근\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h2\u003C/span>&gt;\u003C/span>\u003C/span>\n&lt;/\u003Cspan class=\"hljs-title class_\">Card\u003C/span>&gt;\n\u003C/code>\u003C/pre>\n\u003Ch3>Emotion\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">/** \u003Cspan class=\"hljs-doctag\">@jsxImportSource\u003C/span> \u003Cspan class=\"hljs-doctag\">@emotion\u003C/span>/react */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> { css } \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;@emotion/react&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> cardStyles = css`\u003Cspan class=\"language-css\">\n  \u003Cspan class=\"hljs-comment\">/* Emotion 스타일 */\u003C/span>\n  &amp;\u003Cspan class=\"hljs-selector-pseudo\">:hover\u003C/span> {\n    \u003Cspan class=\"hljs-attribute\">transform\u003C/span>: \u003Cspan class=\"hljs-built_in\">translateY\u003C/span>(-\u003Cspan class=\"hljs-number\">2px\u003C/span>);\n  }\n`\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">Card\u003C/span>(\u003Cspan class=\"hljs-params\">{ children }\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \n      \u003Cspan class=\"hljs-attr\">css\u003C/span>=\u003Cspan class=\"hljs-string\">{cardStyles}\u003C/span>\n      \u003Cspan class=\"hljs-attr\">className\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;card p(xl)&quot;\u003C/span>  // \u003Cspan class=\"hljs-attr\">AdorableCSS\u003C/span>\n    &gt;\u003C/span>\n      {children}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>🖼 디자인 도구 연동\u003C/h2>\n\u003Ch3>Figma 플러그인 (개발 중)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// Figma → AdorableCSS 자동 변환\u003C/span>\n{\n  \u003Cspan class=\"hljs-string\">&quot;Auto Layout&quot;\u003C/span>: {\n    \u003Cspan class=\"hljs-string\">&quot;direction&quot;\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;horizontal&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;gap&quot;\u003C/span>: \u003Cspan class=\"hljs-number\">16\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;padding&quot;\u003C/span>: \u003Cspan class=\"hljs-number\">24\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;alignItems&quot;\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;center&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&quot;justifyContent&quot;\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;space-between&quot;\u003C/span>\n  }\n}\n\n\u003Cspan class=\"hljs-comment\">// ↓ 자동 생성\u003C/span>\n\n&lt;div \u003Cspan class=\"hljs-keyword\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(middle) gap(auto) gap(md) p(lg)&quot;\u003C/span>&gt;\n\u003C/code>\u003C/pre>\n\u003Ch3>Storybook\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// .storybook/preview.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> parameters = {\n  \u003Cspan class=\"hljs-comment\">// AdorableCSS 토큰을 Storybook 컨트롤로\u003C/span>\n  \u003Cspan class=\"hljs-attr\">controls\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">matchers\u003C/span>: {\n      \u003Cspan class=\"hljs-attr\">color\u003C/span>: \u003Cspan class=\"hljs-regexp\">/(background|color)$/i\u003C/span>,\n      \u003Cspan class=\"hljs-attr\">spacing\u003C/span>: \u003Cspan class=\"hljs-regexp\">/(padding|margin|gap)$/i\u003C/span>,\n    },\n  },\n}\n\n\u003Cspan class=\"hljs-comment\">// 데코레이터로 테마 전환\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> decorators = [\n  \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">Story, context\u003C/span>) =&gt;\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">data-theme\u003C/span>=\u003Cspan class=\"hljs-string\">{context.globals.theme}\u003C/span>&gt;\u003C/span>\n      \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">Story\u003C/span> /&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n  ),\n]\n\u003C/code>\u003C/pre>\n\u003Ch2>📊 개발자 도구\u003C/h2>\n\u003Ch3>Chrome DevTools 확장 (계획 중)\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// AdorableCSS 클래스 미리보기\u003C/span>\n\u003Cspan class=\"hljs-comment\">// 호버 시 생성되는 CSS 표시\u003C/span>\n\u003Cspan class=\"hljs-comment\">// 토큰 값 실시간 확인\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>VS Code 통합\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-comment\">// .vscode/adorable.code-snippets\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;AdorableCSS Button&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;prefix&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;acss-button&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;body&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;&lt;button class=\\&quot;btn ${1|primary,secondary,danger|} ${2|sm,md,lg|}\\&quot;&gt;&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;  ${3:Button Text}&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;&lt;/button&gt;&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;AdorableCSS Card&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;prefix&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;acss-card&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;body&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;&lt;div class=\\&quot;card${1: hover:shadow(xl)}\\&quot;&gt;&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;  $0&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n      \u003Cspan class=\"hljs-string\">&quot;&lt;/div&gt;&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🧪 테스트 도구\u003C/h2>\n\u003Ch3>Jest 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// jest.config.js\u003C/span>\n\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n  \u003Cspan class=\"hljs-attr\">moduleNameMapper\u003C/span>: {\n    \u003Cspan class=\"hljs-comment\">// CSS 모듈 모킹\u003C/span>\n    \u003Cspan class=\"hljs-string\">&#x27;\\\\.(css|less|scss|sass)$&#x27;\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;identity-obj-proxy&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-comment\">// AdorableCSS 유틸리티\u003C/span>\n    \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;&lt;rootDir&gt;/__mocks__/adorable-css.js&#x27;\u003C/span>\n  },\n  \u003Cspan class=\"hljs-attr\">setupFilesAfterEnv\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;&lt;rootDir&gt;/jest.setup.js&#x27;\u003C/span>]\n}\n\n\u003Cspan class=\"hljs-comment\">// jest.setup.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;@testing-library/jest-dom&#x27;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css/jest-matchers&#x27;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">// 커스텀 매처\u003C/span>\nexpect.\u003Cspan class=\"hljs-title function_\">extend\u003C/span>({\n  \u003Cspan class=\"hljs-title function_\">toHaveAdorableClass\u003C/span>(\u003Cspan class=\"hljs-params\">element, className\u003C/span>) {\n    \u003Cspan class=\"hljs-keyword\">const\u003C/span> hasClass = element.\u003Cspan class=\"hljs-property\">classList\u003C/span>.\u003Cspan class=\"hljs-title function_\">contains\u003C/span>(className)\n    \u003Cspan class=\"hljs-keyword\">return\u003C/span> {\n      \u003Cspan class=\"hljs-attr\">pass\u003C/span>: hasClass,\n      \u003Cspan class=\"hljs-attr\">message\u003C/span>: \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> \n        \u003Cspan class=\"hljs-string\">`Expected element \u003Cspan class=\"hljs-subst\">${hasClass ? \u003Cspan class=\"hljs-string\">&#x27;not &#x27;\u003C/span> : \u003Cspan class=\"hljs-string\">&#x27;&#x27;\u003C/span>}\u003C/span>to have AdorableCSS class &quot;\u003Cspan class=\"hljs-subst\">${className}\u003C/span>&quot;`\u003C/span>\n    }\n  }\n})\n\u003C/code>\u003C/pre>\n\u003Ch3>Cypress 통합\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// cypress/support/commands.js\u003C/span>\n\u003Cspan class=\"hljs-title class_\">Cypress\u003C/span>.\u003Cspan class=\"hljs-property\">Commands\u003C/span>.\u003Cspan class=\"hljs-title function_\">add\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;getByAdorable&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">adorableClass\u003C/span>) =&gt;\u003C/span> {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> cy.\u003Cspan class=\"hljs-title function_\">get\u003C/span>(\u003Cspan class=\"hljs-string\">`[class*=&quot;\u003Cspan class=\"hljs-subst\">${adorableClass}\u003C/span>&quot;]`\u003C/span>)\n})\n\n\u003Cspan class=\"hljs-comment\">// 사용\u003C/span>\ncy.\u003Cspan class=\"hljs-title function_\">getByAdorable\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;hbox(pack)&#x27;\u003C/span>).\u003Cspan class=\"hljs-title function_\">should\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;be.visible&#x27;\u003C/span>)\ncy.\u003Cspan class=\"hljs-title function_\">getByAdorable\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;card&#x27;\u003C/span>).\u003Cspan class=\"hljs-title function_\">first\u003C/span>().\u003Cspan class=\"hljs-title function_\">click\u003C/span>()\n\u003C/code>\u003C/pre>\n\u003Ch2>🚀 CI/CD 파이프라인\u003C/h2>\n\u003Ch3>GitHub Actions\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-yaml\">\u003Cspan class=\"hljs-comment\"># .github/workflows/adorable-css.yml\u003C/span>\n\u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">AdorableCSS\u003C/span> \u003Cspan class=\"hljs-string\">Validation\u003C/span>\n\n\u003Cspan class=\"hljs-attr\">on:\u003C/span> [\u003Cspan class=\"hljs-string\">push\u003C/span>, \u003Cspan class=\"hljs-string\">pull_request\u003C/span>]\n\n\u003Cspan class=\"hljs-attr\">jobs:\u003C/span>\n  \u003Cspan class=\"hljs-attr\">validate:\u003C/span>\n    \u003Cspan class=\"hljs-attr\">runs-on:\u003C/span> \u003Cspan class=\"hljs-string\">ubuntu-latest\u003C/span>\n    \u003Cspan class=\"hljs-attr\">steps:\u003C/span>\n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">uses:\u003C/span> \u003Cspan class=\"hljs-string\">actions/checkout@v3\u003C/span>\n      \n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">Setup\u003C/span> \u003Cspan class=\"hljs-string\">Node\u003C/span>\n        \u003Cspan class=\"hljs-attr\">uses:\u003C/span> \u003Cspan class=\"hljs-string\">actions/setup-node@v3\u003C/span>\n        \u003Cspan class=\"hljs-attr\">with:\u003C/span>\n          \u003Cspan class=\"hljs-attr\">node-version:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;18&#x27;\u003C/span>\n          \n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">Install\u003C/span> \u003Cspan class=\"hljs-string\">dependencies\u003C/span>\n        \u003Cspan class=\"hljs-attr\">run:\u003C/span> \u003Cspan class=\"hljs-string\">pnpm\u003C/span> \u003Cspan class=\"hljs-string\">install\u003C/span>\n        \n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">Validate\u003C/span> \u003Cspan class=\"hljs-string\">AdorableCSS\u003C/span> \u003Cspan class=\"hljs-string\">classes\u003C/span>\n        \u003Cspan class=\"hljs-attr\">run:\u003C/span> \u003Cspan class=\"hljs-string\">pnpm\u003C/span> \u003Cspan class=\"hljs-string\">adorable:validate\u003C/span>\n        \n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">Check\u003C/span> \u003Cspan class=\"hljs-string\">bundle\u003C/span> \u003Cspan class=\"hljs-string\">size\u003C/span>\n        \u003Cspan class=\"hljs-attr\">run:\u003C/span> \u003Cspan class=\"hljs-string\">pnpm\u003C/span> \u003Cspan class=\"hljs-string\">adorable:size\u003C/span>\n        \n      \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-attr\">name:\u003C/span> \u003Cspan class=\"hljs-string\">Visual\u003C/span> \u003Cspan class=\"hljs-string\">regression\u003C/span> \u003Cspan class=\"hljs-string\">test\u003C/span>\n        \u003Cspan class=\"hljs-attr\">run:\u003C/span> \u003Cspan class=\"hljs-string\">pnpm\u003C/span> \u003Cspan class=\"hljs-string\">test:visual\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>📦 패키지 매니저\u003C/h2>\n\u003Ch3>PNPM Workspace\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-yaml\">\u003Cspan class=\"hljs-comment\"># pnpm-workspace.yaml\u003C/span>\n\u003Cspan class=\"hljs-attr\">packages:\u003C/span>\n  \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;packages/*&#x27;\u003C/span>\n  \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;apps/*&#x27;\u003C/span>\n  \n\u003Cspan class=\"hljs-comment\"># 공유 의존성\u003C/span>\n\u003Cspan class=\"hljs-attr\">shamefully-hoist:\u003C/span>\n  \u003Cspan class=\"hljs-bullet\">-\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>Monorepo 설정\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-comment\">// turbo.json\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;pipeline&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n      \u003Cspan class=\"hljs-attr\">&quot;dependsOn&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;^build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n      \u003Cspan class=\"hljs-attr\">&quot;outputs&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;dist/**&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span> \u003Cspan class=\"hljs-string\">&quot;.next/**&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;dev&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n      \u003Cspan class=\"hljs-attr\">&quot;cache&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">false\u003C/span>\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;adorable:generate&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n      \u003Cspan class=\"hljs-attr\">&quot;outputs&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">[\u003C/span>\u003Cspan class=\"hljs-string\">&quot;src/generated/**&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">]\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🔍 문제 해결\u003C/h2>\n\u003Ch3>클래스 충돌\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// adorable.config.js\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">default\u003C/span> {\n  \u003Cspan class=\"hljs-comment\">// 프리픽스 추가\u003C/span>\n  \u003Cspan class=\"hljs-attr\">prefix\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;ac-&#x27;\u003C/span>,\n  \n  \u003Cspan class=\"hljs-comment\">// 특정 클래스 제외\u003C/span>\n  \u003Cspan class=\"hljs-attr\">blocklist\u003C/span>: [\u003Cspan class=\"hljs-string\">&#x27;container&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;btn&#x27;\u003C/span>],\n  \n  \u003Cspan class=\"hljs-comment\">// 안전 모드\u003C/span>\n  \u003Cspan class=\"hljs-attr\">safeMode\u003C/span>: \u003Cspan class=\"hljs-literal\">true\u003C/span>\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>스타일 우선순위\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 레이어 순서 조정 */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@layer\u003C/span> reset, libraries, adorable, components, utilities;\n\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;other-library.css&#x27;\u003C/span> layer(libraries);\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;adorable-css&#x27;\u003C/span> layer(adorable);\n\u003C/code>\u003C/pre>\n\u003Ch2>📚 추가 리소스\u003C/h2>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Ca href=\"/docs/migration-guide\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">마이그레이션 가이드\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"/docs/troubleshooting\"  class=\"c(primary) underline decoration(primary-200) hover:decoration(primary) transition(all/150ms)\">트러블슈팅\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>\u003Cstrong>💡 핵심\u003C/strong>: AdorableCSS는 기존 도구를 대체하는 것이 아니라 \u003Cstrong>보완\u003C/strong>합니다. 각 도구의 장점을 활용하여 최고의 개발 경험을 만드세요!\u003C/p>\n",{},"\n      /* Highlight.js Light Theme inspired by GitHub */\n      .hljs { background: rgb(249 250 251); color: #24292e; }\n      .hljs-comment, .hljs-quote { color: #6a737d; }\n      .hljs-keyword, .hljs-selector-tag, .hljs-literal { color: #d73a49; }\n      .hljs-string { color: #032f62; }\n      .hljs-number { color: #005cc5; }\n      .hljs-variable, .hljs-template-variable, .hljs-attr { color: #e36209; }\n      .hljs-name, .hljs-selector-class, .hljs-selector-id { color: #22863a; }\n      .hljs-title, .hljs-function { color: #6f42c1; }\n      .hljs-built_in { color: #005cc5; }\n      .hljs-params { color: #24292e; }\n      .hljs-meta { color: #005cc5; }\n      .hljs-emphasis { font-style: italic; }\n      .hljs-strong { font-weight: bold; }\n      .hljs-deletion { color: #b31d28; background-color: #ffeef0; }\n      .hljs-addition { color: #22863a; background-color: #f0fff4; }\n      \n      /* Code blocks */\n      pre { \n        background-color: rgb(249 250 251);\n        border: 1px solid rgb(229 231 235);\n      }\n      \n      /* Copy button */\n      .copy-btn {\n        background-color: rgb(243 244 246);\n        border: 1px solid rgb(209 213 219);\n        color: rgb(55 65 81);\n      }\n      .copy-btn:hover {\n        background-color: rgb(229 231 235);\n      }\n    "],"uses":{"params":["slug"]}}]}
