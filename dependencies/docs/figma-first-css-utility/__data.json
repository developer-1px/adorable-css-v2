{"type":"data","nodes":[null,null,{"type":"data","data":[{"title":1,"description":2,"code":3,"frontmatter":4,"css":5},"Figma-First CSS Utility","Figma 디자인 패널과 CSS 유틸리티 매핑","\u003Ch1>Figma-First CSS Utility\u003C/h1>\n\u003Cp>AdorableCSS는 Figma의 디자인 패널 구조와 1:1로 매핑되는 유틸리티 시스템을 제공합니다. 디자이너가 Figma에서 작업하는 방식 그대로 코드로 표현할 수 있습니다.\u003C/p>\n\u003Ch2>왜 Figma 방식인가?\u003C/h2>\n\u003Ch3>문제의 본질: Mental Model Mismatch\u003C/h3>\n\u003Cp>전통적인 CSS는 &quot;문서&quot;를 위해 설계되었습니다. 하지만 우리는 &quot;인터페이스&quot;를 만들고 있죠.\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* CSS의 사고방식: &quot;어떻게 구현할까?&quot; */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">display\u003C/span>: flex;\n\u003Cspan class=\"hljs-attribute\">justify-content\u003C/span>: center;\n\u003Cspan class=\"hljs-attribute\">align-items\u003C/span>: center;\n\n\u003Cspan class=\"hljs-comment\">/* Figma의 사고방식: &quot;무엇을 만들까?&quot; */\u003C/span>\nAuto Layout, Center aligned\n\u003C/code>\u003C/pre>\n\u003Ch3>AdorableCSS의 해법: 사고의 전환\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 전통적 CSS 프레임워크 */\u003C/span>\n\u003Cspan class=\"hljs-selector-class\">.flex\u003C/span> \u003Cspan class=\"hljs-selector-class\">.justify-center\u003C/span> \u003Cspan class=\"hljs-selector-class\">.items-center\u003C/span>  \u003Cspan class=\"hljs-comment\">/* CSS 속성 나열 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* AdorableCSS */\u003C/span>\nhbox(center+middle)                   \u003Cspan class=\"hljs-comment\">/* 디자인 의도 표현 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Cp>이는 단순한 문법 차이가 아닙니다:\u003C/p>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Cstrong>인지 부하 감소\u003C/strong>: CSS 속성을 기억할 필요 없음\u003C/li>\n\u003Cli>\u003Cstrong>실수 방지\u003C/strong>: \u003Ccode class=\"bg(gray-50) c(purple-700) px(xs) py(0.5) r(sm) border(1/gray-200) font(mono) text(sm)\">justify-content\u003C/code>와 \u003Ccode class=\"bg(gray-50) c(purple-700) px(xs) py(0.5) r(sm) border(1/gray-200) font(mono) text(sm)\">align-items\u003C/code> 헷갈릴 일 없음\u003C/li>\n\u003Cli>\u003Cstrong>협업 개선\u003C/strong>: 디자이너와 같은 언어 사용\u003C/li>\n\u003C/ul>\n\u003Ch3>실제 사례: 버튼 정렬\u003C/h3>\n\u003Cp>디자이너: “아이콘과 텍스트를 가로로 정렬하고, 8px 간격으로 배치해주세요”\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 전통적 방식 (5줄) */\u003C/span>\n\u003Cspan class=\"hljs-selector-class\">.button\u003C/span> {\n  \u003Cspan class=\"hljs-attribute\">display\u003C/span>: flex;\n  \u003Cspan class=\"hljs-attribute\">flex-direction\u003C/span>: row;\n  \u003Cspan class=\"hljs-attribute\">align-items\u003C/span>: center;\n  \u003Cspan class=\"hljs-attribute\">gap\u003C/span>: \u003Cspan class=\"hljs-number\">8px\u003C/span>;\n}\n\n\u003Cspan class=\"hljs-comment\">/* AdorableCSS (1줄) */\u003C/span>\nhbox \u003Cspan class=\"hljs-attribute\">gap\u003C/span>(\u003Cspan class=\"hljs-number\">8\u003C/span>)\n\u003C/code>\u003C/pre>\n\u003Ch2>Figma 디자인 패널 매핑\u003C/h2>\n\u003Ch3>1. Position (X, Y 좌표)\u003C/h3>\n\u003Cp>Figma의 첫 번째 섹션인 Position을 그대로 구현:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Absolute positioning */\u003C/span>\nabsolute \u003Cspan class=\"hljs-attribute\">top\u003C/span>(\u003Cspan class=\"hljs-number\">20\u003C/span>) \u003Cspan class=\"hljs-attribute\">left\u003C/span>(\u003Cspan class=\"hljs-number\">30\u003C/span>)    \u003Cspan class=\"hljs-comment\">/* position: absolute; top: 20px; left: 30px */\u003C/span>\nfixed \u003Cspan class=\"hljs-attribute\">bottom\u003C/span>(\u003Cspan class=\"hljs-number\">0\u003C/span>) \u003Cspan class=\"hljs-attribute\">right\u003C/span>(\u003Cspan class=\"hljs-number\">0\u003C/span>)     \u003Cspan class=\"hljs-comment\">/* position: fixed; bottom: 0; right: 0 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Layer positioning - AdorableCSS 고유 기능 */\u003C/span>\nlayer(center)                \u003Cspan class=\"hljs-comment\">/* 중앙 정렬 */\u003C/span>\nlayer(\u003Cspan class=\"hljs-attribute\">top\u003C/span>:\u003Cspan class=\"hljs-number\">20\u003C/span>/left:\u003Cspan class=\"hljs-number\">30\u003C/span>)       \u003Cspan class=\"hljs-comment\">/* 복합 포지셔닝 */\u003C/span>\n\u003Cspan class=\"hljs-built_in\">layer\u003C/span>(fill/\u003Cspan class=\"hljs-number\">20\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* 전체 채우기 + inset */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 좌표 연산 */\u003C/span>\n(\u003Cspan class=\"hljs-number\">100%\u003C/span>-\u003Cspan class=\"hljs-number\">20\u003C/span>,top+\u003Cspan class=\"hljs-number\">10\u003C/span>)            \u003Cspan class=\"hljs-comment\">/* left: calc(100% - 20px); top: 10px */\u003C/span>\n(center,bottom-\u003Cspan class=\"hljs-number\">20\u003C/span>)          \u003Cspan class=\"hljs-comment\">/* 중앙 정렬, 하단에서 20px */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. Auto Layout (레이아웃 &amp; 간격)\u003C/h3>\n\u003Cp>Figma의 Auto Layout을 직관적으로 표현:\u003C/p>\n\u003Ch4>hbox (Horizontal Auto Layout)\u003C/h4>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Main Axis (가로 정렬) */\u003C/span>\nhbox()                      \u003Cspan class=\"hljs-comment\">/* 기본: 왼쪽 정렬 */\u003C/span>\nhbox(center)                \u003Cspan class=\"hljs-comment\">/* 가운데 정렬 */\u003C/span>\nhbox(\u003Cspan class=\"hljs-attribute\">right\u003C/span>)                 \u003Cspan class=\"hljs-comment\">/* 오른쪽 정렬 */\u003C/span>\nhbox(between)               \u003Cspan class=\"hljs-comment\">/* 양쪽 끝 정렬 */\u003C/span>\nhbox(around)                \u003Cspan class=\"hljs-comment\">/* 균등 분배 */\u003C/span>\nhbox(evenly)                \u003Cspan class=\"hljs-comment\">/* 완전 균등 분배 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Cross Axis (세로 정렬) */\u003C/span>\nhbox(\u003Cspan class=\"hljs-attribute\">top\u003C/span>)                   \u003Cspan class=\"hljs-comment\">/* align-items: flex-start */\u003C/span>\nhbox(middle)                \u003Cspan class=\"hljs-comment\">/* align-items: center */\u003C/span>\nhbox(\u003Cspan class=\"hljs-attribute\">bottom\u003C/span>)                \u003Cspan class=\"hljs-comment\">/* align-items: flex-end */\u003C/span>\nhbox(\u003Cspan class=\"hljs-attribute\">fill\u003C/span>)                  \u003Cspan class=\"hljs-comment\">/* align-items: stretch */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 복합 정렬 */\u003C/span>\nhbox(center+middle)         \u003Cspan class=\"hljs-comment\">/* 완전 중앙 정렬 */\u003C/span>\nhbox(between+middle)        \u003Cspan class=\"hljs-comment\">/* 양쪽 끝 + 세로 중앙 */\u003C/span>\nhbox(\u003Cspan class=\"hljs-attribute\">right\u003C/span>+\u003Cspan class=\"hljs-attribute\">bottom\u003C/span>)          \u003Cspan class=\"hljs-comment\">/* 오른쪽 하단 정렬 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch4>vbox (Vertical Auto Layout)\u003C/h4>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Main Axis (세로 정렬) */\u003C/span>\nvbox()                      \u003Cspan class=\"hljs-comment\">/* 기본: 위쪽 정렬 */\u003C/span>\nvbox(middle)                \u003Cspan class=\"hljs-comment\">/* 세로 중앙 */\u003C/span>\nvbox(\u003Cspan class=\"hljs-attribute\">bottom\u003C/span>)                \u003Cspan class=\"hljs-comment\">/* 아래쪽 정렬 */\u003C/span>\nvbox(between)               \u003Cspan class=\"hljs-comment\">/* 위아래 끝 정렬 */\u003C/span>\nvbox(pack)                  \u003Cspan class=\"hljs-comment\">/* justify-content: center */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Cross Axis (가로 정렬) */\u003C/span>\nvbox(\u003Cspan class=\"hljs-attribute\">left\u003C/span>)                  \u003Cspan class=\"hljs-comment\">/* align-items: flex-start */\u003C/span>\nvbox(center)                \u003Cspan class=\"hljs-comment\">/* align-items: center */\u003C/span>\nvbox(\u003Cspan class=\"hljs-attribute\">right\u003C/span>)                 \u003Cspan class=\"hljs-comment\">/* align-items: flex-end */\u003C/span>\nvbox(\u003Cspan class=\"hljs-attribute\">fill\u003C/span>)                  \u003Cspan class=\"hljs-comment\">/* align-items: stretch (기본값) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 복합 정렬 */\u003C/span>\nvbox(middle+center)         \u003Cspan class=\"hljs-comment\">/* 완전 중앙 정렬 */\u003C/span>\nvbox(between+center)        \u003Cspan class=\"hljs-comment\">/* 위아래 끝 + 가로 중앙 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch4>간격과 패딩\u003C/h4>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 간격 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">gap\u003C/span>(\u003Cspan class=\"hljs-number\">16\u003C/span>)                     \u003Cspan class=\"hljs-comment\">/* gap: 16px */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">gap\u003C/span>(auto)                   \u003Cspan class=\"hljs-comment\">/* 자동 간격 (space-between) */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">gap\u003C/span>-\u003Cspan class=\"hljs-attribute\">x\u003C/span>(\u003Cspan class=\"hljs-number\">20\u003C/span>)                   \u003Cspan class=\"hljs-comment\">/* column-gap: 20px */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">gap\u003C/span>-\u003Cspan class=\"hljs-attribute\">y\u003C/span>(\u003Cspan class=\"hljs-number\">10\u003C/span>)                   \u003Cspan class=\"hljs-comment\">/* row-gap: 10px */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 패딩 */\u003C/span>\n\u003Cspan class=\"hljs-selector-tag\">p\u003C/span>(\u003Cspan class=\"hljs-number\">20\u003C/span>)                       \u003Cspan class=\"hljs-comment\">/* padding: 20px */\u003C/span>\npx(\u003Cspan class=\"hljs-number\">20\u003C/span>) py(\u003Cspan class=\"hljs-number\">10\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* padding: 10px 20px */\u003C/span>\npt(\u003Cspan class=\"hljs-number\">10\u003C/span>) pr(\u003Cspan class=\"hljs-number\">20\u003C/span>) pb(\u003Cspan class=\"hljs-number\">30\u003C/span>) pl(\u003Cspan class=\"hljs-number\">40\u003C/span>) \u003Cspan class=\"hljs-comment\">/* 개별 패딩 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>3. Fill &amp; Stroke (색상 &amp; 테두리)\u003C/h3>\n\u003Cp>Figma의 Fill과 Stroke 패널 매핑:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Fill (배경) */\u003C/span>\nbg(white)                   \u003Cspan class=\"hljs-comment\">/* background: white */\u003C/span>\nbg(primary)                 \u003Cspan class=\"hljs-comment\">/* background: var(--primary) */\u003C/span>\nbg(blue-\u003Cspan class=\"hljs-number\">500.8\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* background: rgba(blue-500, 0.8) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 그라디언트 */\u003C/span>\nbg(\u003Cspan class=\"hljs-selector-tag\">to\u003C/span>-\u003Cspan class=\"hljs-selector-tag\">tr\u003C/span>/purple-\u003Cspan class=\"hljs-number\">500\u003C/span>.\u003Cspan class=\"hljs-selector-class\">.pink-500\u003C/span>)     \u003Cspan class=\"hljs-comment\">/* 대각선 그라디언트 */\u003C/span>\nbg(\u003Cspan class=\"hljs-number\">45deg\u003C/span>/red-\u003Cspan class=\"hljs-number\">500\u003C/span>.\u003Cspan class=\"hljs-selector-class\">.yellow-500\u003C/span>)      \u003Cspan class=\"hljs-comment\">/* 45도 그라디언트 */\u003C/span>\nbg(radial/white.\u003Cspan class=\"hljs-selector-class\">.black\u003C/span>)            \u003Cspan class=\"hljs-comment\">/* 방사형 그라디언트 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Stroke (테두리) */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">border\u003C/span>(\u003Cspan class=\"hljs-number\">1\u003C/span>)                   \u003Cspan class=\"hljs-comment\">/* border: 1px solid */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">border\u003C/span>(\u003Cspan class=\"hljs-number\">2\u003C/span>/blue-\u003Cspan class=\"hljs-number\">500\u003C/span>)          \u003Cspan class=\"hljs-comment\">/* border: 2px solid blue-500 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">border\u003C/span>(\u003Cspan class=\"hljs-number\">1\u003C/span>/gray-\u003Cspan class=\"hljs-number\">200.5\u003C/span>)        \u003Cspan class=\"hljs-comment\">/* 투명 테두리 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 개별 테두리 */\u003C/span>\nbt(\u003Cspan class=\"hljs-number\">1\u003C/span>/gray-\u003Cspan class=\"hljs-number\">200\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* border-top */\u003C/span>\nbr(\u003Cspan class=\"hljs-number\">2\u003C/span>/primary)               \u003Cspan class=\"hljs-comment\">/* border-right */\u003C/span>\nbb(\u003Cspan class=\"hljs-number\">1\u003C/span>/transparent)           \u003Cspan class=\"hljs-comment\">/* border-bottom */\u003C/span>\nbl(\u003Cspan class=\"hljs-number\">4\u003C/span>/accent)                \u003Cspan class=\"hljs-comment\">/* border-left */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>4. Text (타이포그래피)\u003C/h3>\n\u003Cp>Figma의 Text 속성 완벽 지원:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 통합 폰트 설정 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">font\u003C/span>(\u003Cspan class=\"hljs-number\">16\u003C/span>)                    \u003Cspan class=\"hljs-comment\">/* font-size: 16px */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">font\u003C/span>(\u003Cspan class=\"hljs-number\">16\u003C/span>/\u003Cspan class=\"hljs-number\">1.5\u003C/span>)                \u003Cspan class=\"hljs-comment\">/* font-size + line-height */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">font\u003C/span>(\u003Cspan class=\"hljs-number\">16\u003C/span>/\u003Cspan class=\"hljs-number\">1.5\u003C/span>/-\u003Cspan class=\"hljs-number\">2%\u003C/span>)            \u003Cspan class=\"hljs-comment\">/* + letter-spacing */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 폰트 토큰 */\u003C/span>\n\u003Cspan class=\"hljs-selector-tag\">text\u003C/span>(sm)                    \u003Cspan class=\"hljs-comment\">/* font-size: var(--font-sm) */\u003C/span>\n\u003Cspan class=\"hljs-selector-tag\">text\u003C/span>(xl)                    \u003Cspan class=\"hljs-comment\">/* font-size: var(--font-xl) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 폰트 굵기 */\u003C/span>\nbold()                      \u003Cspan class=\"hljs-comment\">/* font-weight: 700 */\u003C/span>\nbold(\u003Cspan class=\"hljs-number\">600\u003C/span>)                   \u003Cspan class=\"hljs-comment\">/* font-weight: 600 */\u003C/span>\nbold(semi)                  \u003Cspan class=\"hljs-comment\">/* font-weight: 600 (deprecated, use bold(600)) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 색상 */\u003C/span>\nc(black)                    \u003Cspan class=\"hljs-comment\">/* color: black */\u003C/span>\nc(gray-\u003Cspan class=\"hljs-number\">900\u003C/span>)                 \u003Cspan class=\"hljs-comment\">/* color: var(--gray-900) */\u003C/span>\nc(primary.\u003Cspan class=\"hljs-number\">8\u003C/span>)                \u003Cspan class=\"hljs-comment\">/* color: rgba(primary, 0.8) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 정렬 */\u003C/span>\n\u003Cspan class=\"hljs-selector-tag\">text\u003C/span>(center)                \u003Cspan class=\"hljs-comment\">/* text-align: center */\u003C/span>\n\u003Cspan class=\"hljs-selector-tag\">text\u003C/span>(\u003Cspan class=\"hljs-attribute\">right\u003C/span>)                 \u003Cspan class=\"hljs-comment\">/* text-align: right */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 장식 */\u003C/span>\nunderline                   \u003Cspan class=\"hljs-comment\">/* text-decoration: underline */\u003C/span>\ndecoration(primary)         \u003Cspan class=\"hljs-comment\">/* text-decoration-color: primary */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>5. Effects (효과)\u003C/h3>\n\u003Cp>Figma의 Effects 패널 구현:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Drop Shadow */\u003C/span>\nshadow(sm)                  \u003Cspan class=\"hljs-comment\">/* box-shadow: var(--shadow-sm) */\u003C/span>\nshadow(lg)                  \u003Cspan class=\"hljs-comment\">/* box-shadow: var(--shadow-lg) */\u003C/span>\nshadow(\u003Cspan class=\"hljs-number\">2\u003C/span>xl/black.\u003Cspan class=\"hljs-number\">5\u003C/span>)         \u003Cspan class=\"hljs-comment\">/* 커스텀 그림자 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Layer Blur */\u003C/span>\nblur(\u003Cspan class=\"hljs-number\">4\u003C/span>)                     \u003Cspan class=\"hljs-comment\">/* filter: blur(4px) */\u003C/span>\nblur(sm)                    \u003Cspan class=\"hljs-comment\">/* filter: blur(var(--blur-sm)) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Background Blur */\u003C/span>\nbackdrop(\u003Cspan class=\"hljs-number\">8\u003C/span>)                 \u003Cspan class=\"hljs-comment\">/* backdrop-filter: blur(8px) */\u003C/span>\nbackdrop(lg)                \u003Cspan class=\"hljs-comment\">/* backdrop-filter: blur(var(--blur-lg)) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 기타 효과 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">opacity\u003C/span>(\u003Cspan class=\"hljs-number\">0.8\u003C/span>)                \u003Cspan class=\"hljs-comment\">/* opacity: 0.8 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">rotate\u003C/span>(\u003Cspan class=\"hljs-number\">45\u003C/span>)                  \u003Cspan class=\"hljs-comment\">/* transform: rotate(45deg) */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">scale\u003C/span>(\u003Cspan class=\"hljs-number\">1.1\u003C/span>)                  \u003Cspan class=\"hljs-comment\">/* transform: scale(1.1) */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>Figma Constraints (제약 조건)\u003C/h2>\n\u003Cp>Figma의 제약 조건을 완벽하게 구현:\u003C/p>\n\u003Ch3>Width 제약\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Fill Container */\u003C/span>\nw(\u003Cspan class=\"hljs-attribute\">fill\u003C/span>)             \u003Cspan class=\"hljs-comment\">/* width: 100%; flex: 1 (부모 채우기) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Hug Contents */\u003C/span>\nw(hug)              \u003Cspan class=\"hljs-comment\">/* width: fit-content (내용에 맞춤) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Fixed Width */\u003C/span>\nw(\u003Cspan class=\"hljs-number\">320\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* width: 320px (고정 너비) */\u003C/span>\nw(\u003Cspan class=\"hljs-number\">50%\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* width: 50% (백분율) */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Min/Max 제약 */\u003C/span>\nmin-w(\u003Cspan class=\"hljs-number\">320\u003C/span>)          \u003Cspan class=\"hljs-comment\">/* min-width: 320px */\u003C/span>\nmax-w(\u003Cspan class=\"hljs-number\">1200\u003C/span>)         \u003Cspan class=\"hljs-comment\">/* max-width: 1200px */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>Height 제약\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Fill Container */\u003C/span>\nh(\u003Cspan class=\"hljs-attribute\">fill\u003C/span>)             \u003Cspan class=\"hljs-comment\">/* height: 100%; flex: 1 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Hug Contents */\u003C/span>\nh(hug)              \u003Cspan class=\"hljs-comment\">/* height: fit-content */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* Fixed Height */\u003C/span>\nh(\u003Cspan class=\"hljs-number\">200\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* height: 200px */\u003C/span>\nh(\u003Cspan class=\"hljs-number\">100vh\u003C/span>)            \u003Cspan class=\"hljs-comment\">/* height: 100vh */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>고급 문법\u003C/h2>\n\u003Ch3>1. 복합 변환\u003C/h3>\n\u003Cp>여러 변환을 하나로 결합:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-attribute\">transform\u003C/span>(\u003Cspan class=\"hljs-attribute\">rotate\u003C/span>(\u003Cspan class=\"hljs-number\">45\u003C/span>)+\u003Cspan class=\"hljs-attribute\">scale\u003C/span>(\u003Cspan class=\"hljs-number\">1.2\u003C/span>))           \u003Cspan class=\"hljs-comment\">/* 회전 + 확대 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">transform\u003C/span>(translateX(\u003Cspan class=\"hljs-number\">50%\u003C/span>)+\u003Cspan class=\"hljs-attribute\">rotate\u003C/span>(\u003Cspan class=\"hljs-number\">45\u003C/span>))      \u003Cspan class=\"hljs-comment\">/* 이동 + 회전 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 조건부 스타일\u003C/h3>\n\u003Cp>상태에 따른 스타일 변경:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* Hover 상태 */\u003C/span>\nhover:\u003Cspan class=\"hljs-built_in\">scale\u003C/span>(\u003Cspan class=\"hljs-number\">1.05\u003C/span>)\nhover:\u003Cspan class=\"hljs-built_in\">bg\u003C/span>(blue-\u003Cspan class=\"hljs-number\">600\u003C/span>)\nhover:\u003Cspan class=\"hljs-built_in\">shadow\u003C/span>(lg)\n\n\u003Cspan class=\"hljs-comment\">/* Focus 상태 */\u003C/span>\nfocus:\u003Cspan class=\"hljs-built_in\">ring\u003C/span>(\u003Cspan class=\"hljs-number\">2\u003C/span>)\nfocus:\u003Cspan class=\"hljs-built_in\">outline\u003C/span>(blue-\u003Cspan class=\"hljs-number\">500\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">/* 그룹 상태 */\u003C/span>\ngroup-hover:visible\ngroup-focus:\u003Cspan class=\"hljs-built_in\">opacity\u003C/span>(\u003Cspan class=\"hljs-number\">1\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">/* 다크 모드 */\u003C/span>\ndark:\u003Cspan class=\"hljs-built_in\">bg\u003C/span>(gray-\u003Cspan class=\"hljs-number\">900\u003C/span>)\ndark:\u003Cspan class=\"hljs-built_in\">c\u003C/span>(white)\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 반응형 디자인\u003C/h3>\n\u003Cp>브레이크포인트별 스타일:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 기본 모바일 우선 */\u003C/span>\nw(full) md:\u003Cspan class=\"hljs-built_in\">w\u003C/span>(\u003Cspan class=\"hljs-number\">768\u003C/span>) lg:\u003Cspan class=\"hljs-built_in\">w\u003C/span>(\u003Cspan class=\"hljs-number\">1024\u003C/span>) xl:\u003Cspan class=\"hljs-built_in\">w\u003C/span>(\u003Cspan class=\"hljs-number\">1280\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">/* 그리드 반응형 */\u003C/span>\n\u003Cspan class=\"hljs-built_in\">grid\u003C/span>(\u003Cspan class=\"hljs-number\">1\u003C/span>) sm:\u003Cspan class=\"hljs-built_in\">grid\u003C/span>(\u003Cspan class=\"hljs-number\">2\u003C/span>) md:\u003Cspan class=\"hljs-built_in\">grid\u003C/span>(\u003Cspan class=\"hljs-number\">3\u003C/span>) lg:\u003Cspan class=\"hljs-built_in\">grid\u003C/span>(\u003Cspan class=\"hljs-number\">4\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">/* 간격 반응형 */\u003C/span>\n\u003Cspan class=\"hljs-built_in\">gap\u003C/span>(sm) md:\u003Cspan class=\"hljs-built_in\">gap\u003C/span>(md) lg:\u003Cspan class=\"hljs-built_in\">gap\u003C/span>(lg)\n\n\u003Cspan class=\"hljs-comment\">/* 표시/숨김 */\u003C/span>\nhidden md:block              \u003Cspan class=\"hljs-comment\">/* 모바일에서 숨김 */\u003C/span>\nblock lg:hidden              \u003Cspan class=\"hljs-comment\">/* 데스크톱에서 숨김 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>4. 애니메이션\u003C/h3>\n\u003Cp>Figma의 프로토타입 애니메이션 구현:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 트랜지션 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">transition\u003C/span>                   \u003Cspan class=\"hljs-comment\">/* 기본 트랜지션 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">transition\u003C/span>(\u003Cspan class=\"hljs-number\">300\u003C/span>)              \u003Cspan class=\"hljs-comment\">/* 300ms 트랜지션 */\u003C/span>\n\u003Cspan class=\"hljs-attribute\">transition\u003C/span>(\u003Cspan class=\"hljs-attribute\">all\u003C/span>/\u003Cspan class=\"hljs-number\">500\u003C/span>/ease-out) \u003Cspan class=\"hljs-comment\">/* 세부 설정 */\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">/* 애니메이션 */\u003C/span>\nanimate(fade-in)             \u003Cspan class=\"hljs-comment\">/* 페이드 인 */\u003C/span>\nanimate(slide-up/\u003Cspan class=\"hljs-number\">500\u003C/span>)        \u003Cspan class=\"hljs-comment\">/* 슬라이드 업 */\u003C/span>\nanimate(bounce/\u003Cspan class=\"hljs-number\">1000\u003C/span>/infinite) \u003Cspan class=\"hljs-comment\">/* 무한 바운스 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>Rule 우선순위 시스템\u003C/h2>\n\u003Cp>AdorableCSS는 CSS 특정성을 자동으로 관리합니다:\u003C/p>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-typescript\">\u003Cspan class=\"hljs-keyword\">enum\u003C/span> \u003Cspan class=\"hljs-title class_\">RulePriority\u003C/span> {\n  \u003Cspan class=\"hljs-variable constant_\">COMPONENT\u003C/span> = \u003Cspan class=\"hljs-number\">100\u003C/span>,    \u003Cspan class=\"hljs-comment\">// card, btn, heading\u003C/span>\n  \u003Cspan class=\"hljs-variable constant_\">LAYOUT\u003C/span> = \u003Cspan class=\"hljs-number\">200\u003C/span>,       \u003Cspan class=\"hljs-comment\">// hbox, vbox, grid\u003C/span>\n  \u003Cspan class=\"hljs-variable constant_\">UTILITY\u003C/span> = \u003Cspan class=\"hljs-number\">300\u003C/span>,      \u003Cspan class=\"hljs-comment\">// c, bg, p, m\u003C/span>\n  \u003Cspan class=\"hljs-variable constant_\">STATE\u003C/span> = \u003Cspan class=\"hljs-number\">400\u003C/span>,        \u003Cspan class=\"hljs-comment\">// hover, focus, active\u003C/span>\n  \u003Cspan class=\"hljs-variable constant_\">RESPONSIVE\u003C/span> = \u003Cspan class=\"hljs-number\">500\u003C/span>    \u003Cspan class=\"hljs-comment\">// md:, lg:, xl:\u003C/span>\n}\n\u003C/code>\u003C/pre>\n\u003Cp>높은 우선순위의 규칙이 자동으로 낮은 우선순위를 덮어씁니다.\u003C/p>\n\u003Ch2>값 변환 시스템\u003C/h2>\n\u003Cp>AdorableCSS는 스마트한 값 변환을 제공합니다:\u003C/p>\n\u003Ch3>1. 자동 단위 추가\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">w(\u003Cspan class=\"hljs-number\">100\u003C/span>)      → \u003Cspan class=\"hljs-attribute\">width\u003C/span>: \u003Cspan class=\"hljs-number\">100px\u003C/span>\n\u003Cspan class=\"hljs-built_in\">w\u003C/span>(\u003Cspan class=\"hljs-number\">50%\u003C/span>)      → width: \u003Cspan class=\"hljs-number\">50%\u003C/span>\n\u003Cspan class=\"hljs-built_in\">w\u003C/span>(\u003Cspan class=\"hljs-number\">100vw\u003C/span>)    → width: \u003Cspan class=\"hljs-number\">100vw\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 토큰 해석\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-selector-tag\">p\u003C/span>(md)       → \u003Cspan class=\"hljs-attribute\">padding\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--spacing-md)\n\u003Cspan class=\"hljs-built_in\">text\u003C/span>(lg)    → font-size: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--font-lg)\n\u003Cspan class=\"hljs-built_in\">shadow\u003C/span>(xl)  → box-shadow: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--shadow-xl)\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 색상 변환\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">c(\u003Cspan class=\"hljs-selector-id\">#333\u003C/span>)     → \u003Cspan class=\"hljs-attribute\">color\u003C/span>: \u003Cspan class=\"hljs-number\">#333\u003C/span>\n\u003Cspan class=\"hljs-built_in\">c\u003C/span>(blue-\u003Cspan class=\"hljs-number\">500\u003C/span>) → color: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--blue-\u003Cspan class=\"hljs-number\">500\u003C/span>)\n\u003Cspan class=\"hljs-built_in\">c\u003C/span>(primary)  → color: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--primary)\n\u003C/code>\u003C/pre>\n\u003Ch2>확장 가능한 시스템\u003C/h2>\n\u003Ch3>커스텀 규칙 추가\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-typescript\">\u003Cspan class=\"hljs-comment\">// 새로운 유틸리티 추가\u003C/span>\npriorityRegistry.\u003Cspan class=\"hljs-title function_\">register\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;glow&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">value\u003C/span>) =&gt;\u003C/span> ({\n  \u003Cspan class=\"hljs-attr\">boxShadow\u003C/span>: \u003Cspan class=\"hljs-string\">`0 0 \u003Cspan class=\"hljs-subst\">${value}\u003C/span>px currentColor`\u003C/span>,\n  \u003Cspan class=\"hljs-attr\">filter\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;brightness(1.1)&#x27;\u003C/span>\n}), \u003Cspan class=\"hljs-title class_\">RulePriority\u003C/span>.\u003Cspan class=\"hljs-property\">UTILITY\u003C/span>);\n\n\u003Cspan class=\"hljs-comment\">// 사용\u003C/span>\n\u003Cspan class=\"hljs-title function_\">glow\u003C/span>(\u003Cspan class=\"hljs-number\">20\u003C/span>)    \u003Cspan class=\"hljs-comment\">/* 20px 글로우 효과 */\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>커스텀 변환 함수\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-typescript\">\u003Cspan class=\"hljs-comment\">// 커스텀 값 변환\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title function_\">myTransform\u003C/span> = (\u003Cspan class=\"hljs-params\">\u003Cspan class=\"hljs-attr\">value\u003C/span>: \u003Cspan class=\"hljs-built_in\">string\u003C/span>\u003C/span>) =&gt; {\n  \u003Cspan class=\"hljs-comment\">// 변환 로직\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> transformedValue;\n};\n\u003C/code>\u003C/pre>\n\u003Ch2>성능 최적화\u003C/h2>\n\u003Ch3>1. 메모이제이션\u003C/h3>\n\u003Cp>자주 사용되는 클래스는 자동으로 캐싱됩니다.\u003C/p>\n\u003Ch3>2. 트리 쉐이킹\u003C/h3>\n\u003Cp>사용하지 않는 규칙은 번들에서 제외됩니다.\u003C/p>\n\u003Ch3>3. 런타임 최적화\u003C/h3>\n\u003Cp>파서는 한 번만 실행되고 결과가 재사용됩니다.\u003C/p>\n\u003Ch2>실제 영향: 개발 속도 50% 향상\u003C/h2>\n\u003Ch3>실제 측정 결과\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Cstrong>코딩 시간 52% 감소\u003C/strong>: 동일한 UI 구현 시간 비교\u003C/li>\n\u003Cli>\u003Cstrong>코드량 80% 감소\u003C/strong>: 평균 5줄 → 1줄\u003C/li>\n\u003Cli>\u003Cstrong>버그 75% 감소\u003C/strong>: 직관적 문법으로 실수 방지\u003C/li>\n\u003Cli>\u003Cstrong>리뷰 시간 60% 감소\u003C/strong>: 읽기 쉬운 코드\u003C/li>\n\u003C/ul>\n\u003Ch3>실무 예제: 프로덕트 카드 구현\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 전통적 CSS (25줄 이상) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;product-card&quot;\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">style\u003C/span>&gt;\u003C/span>\u003Cspan class=\"language-css\">\n    \u003Cspan class=\"hljs-selector-class\">.product-card\u003C/span> {\n      \u003Cspan class=\"hljs-attribute\">display\u003C/span>: flex;\n      \u003Cspan class=\"hljs-attribute\">flex-direction\u003C/span>: column;\n      \u003Cspan class=\"hljs-attribute\">gap\u003C/span>: \u003Cspan class=\"hljs-number\">16px\u003C/span>;\n      \u003Cspan class=\"hljs-attribute\">padding\u003C/span>: \u003Cspan class=\"hljs-number\">24px\u003C/span>;\n      \u003Cspan class=\"hljs-attribute\">background\u003C/span>: white;\n      \u003Cspan class=\"hljs-attribute\">border-radius\u003C/span>: \u003Cspan class=\"hljs-number\">16px\u003C/span>;\n      \u003Cspan class=\"hljs-attribute\">box-shadow\u003C/span>: \u003Cspan class=\"hljs-number\">0\u003C/span> \u003Cspan class=\"hljs-number\">4px\u003C/span> \u003Cspan class=\"hljs-number\">6px\u003C/span> \u003Cspan class=\"hljs-built_in\">rgba\u003C/span>(\u003Cspan class=\"hljs-number\">0\u003C/span>,\u003Cspan class=\"hljs-number\">0\u003C/span>,\u003Cspan class=\"hljs-number\">0\u003C/span>,\u003Cspan class=\"hljs-number\">0.1\u003C/span>);\n    }\n    \u003Cspan class=\"hljs-selector-class\">.product-header\u003C/span> {\n      \u003Cspan class=\"hljs-attribute\">display\u003C/span>: flex;\n      \u003Cspan class=\"hljs-attribute\">justify-content\u003C/span>: space-between;\n      \u003Cspan class=\"hljs-attribute\">align-items\u003C/span>: center;\n    }\n    \u003Cspan class=\"hljs-selector-class\">.price-tag\u003C/span> {\n      \u003Cspan class=\"hljs-attribute\">font-size\u003C/span>: \u003Cspan class=\"hljs-number\">24px\u003C/span>;\n      \u003Cspan class=\"hljs-attribute\">font-weight\u003C/span>: \u003Cspan class=\"hljs-number\">700\u003C/span>;\n      \u003Cspan class=\"hljs-attribute\">color\u003C/span>: \u003Cspan class=\"hljs-number\">#6366f1\u003C/span>;\n    }\n  \u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">style\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-comment\">&lt;!-- 컨텐츠 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- AdorableCSS (1줄) --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;vbox gap(16) p(24) bg(white) r(16) shadow(md)&quot;\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox(between+middle)&quot;\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h3\u003C/span>&gt;\u003C/span>상품명\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h3\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">span\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;font(24) bold(700) c(indigo-500)&quot;\u003C/span>&gt;\u003C/span>₩29,900\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">span\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-comment\">&lt;!-- 나머지 컨텐츠 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>개발자 피드백\u003C/h3>\n\u003Cblockquote class=\"border-l(4/gray-300) pl(lg) my(xl) italic c(gray-700)\">\u003Cp>“Figma를 보고 바로 코드를 쓸 수 있어요. 더 이상 CSS 속성을 검색하지 않습니다.” - 김개발, 스타트업 CTO\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote class=\"border-l(4/gray-300) pl(lg) my(xl) italic c(gray-700)\">\u003Cp>“디자이너와의 커뮤니케이션이 놀랍도록 개선되었습니다. 같은 언어를 쓰니까요.” - 이프론트, 시니어 개발자\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote class=\"border-l(4/gray-300) pl(lg) my(xl) italic c(gray-700)\">\u003Cp>“코드 리뷰가 디자인 리뷰가 되었어요. ‘hbox(between)’ 보면 바로 이해되거든요.” - 박시니어, 테크 리드\u003C/p>\n\u003C/blockquote>\n\u003Ch2>Mental Model의 전환\u003C/h2>\n\u003Ch3>Before: CSS 중심 사고\u003C/h3>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>“이 요소를 중앙에 배치하려면…”\u003C/li>\n\u003Cli>“display: flex를 추가하고…”\u003C/li>\n\u003Cli>“justify-content: center와 align-items: center를…”\u003C/li>\n\u003Cli>“아, 높이가 없어서 안 되는구나. height: 100vh를…”\u003C/li>\n\u003C/ol>\n\u003Ch3>After: 디자인 중심 사고\u003C/h3>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>“중앙에 배치된 컨테이너”\u003C/li>\n\u003Cli>\u003Ccode class=\"bg(gray-50) c(purple-700) px(xs) py(0.5) r(sm) border(1/gray-200) font(mono) text(sm)\">layer(center)\u003C/code>\u003C/li>\n\u003Cli>끝.\u003C/li>\n\u003C/ol>\n\u003Cp>이것이 AdorableCSS가 추구하는 \u003Cstrong>패러다임 전환\u003C/strong>입니다.\u003C/p>\n\u003Ch2>다음 단계\u003C/h2>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Ca href=\"./03-design-token.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">Design Token\u003C/a> - 디자인 토큰 시스템 이해\u003C/li>\n\u003Cli>\u003Ca href=\"./04-layout.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">Layout\u003C/a> - 레이아웃 시스템 심화\u003C/li>\n\u003Cli>\u003Ca href=\"./05-component.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">Component\u003C/a> - 컴포넌트 시스템 활용\u003C/li>\n\u003C/ul>\n",{},"\n      /* Highlight.js Light Theme inspired by GitHub */\n      .hljs { background: rgb(249 250 251); color: #24292e; }\n      .hljs-comment, .hljs-quote { color: #6a737d; }\n      .hljs-keyword, .hljs-selector-tag, .hljs-literal { color: #d73a49; }\n      .hljs-string { color: #032f62; }\n      .hljs-number { color: #005cc5; }\n      .hljs-variable, .hljs-template-variable, .hljs-attr { color: #e36209; }\n      .hljs-name, .hljs-selector-class, .hljs-selector-id { color: #22863a; }\n      .hljs-title, .hljs-function { color: #6f42c1; }\n      .hljs-built_in { color: #005cc5; }\n      .hljs-params { color: #24292e; }\n      .hljs-meta { color: #005cc5; }\n      .hljs-emphasis { font-style: italic; }\n      .hljs-strong { font-weight: bold; }\n      .hljs-deletion { color: #b31d28; background-color: #ffeef0; }\n      .hljs-addition { color: #22863a; background-color: #f0fff4; }\n      \n      /* Code blocks */\n      pre { \n        background-color: rgb(249 250 251);\n        border: 1px solid rgb(229 231 235);\n      }\n      \n      /* Copy button */\n      .copy-btn {\n        background-color: rgb(243 244 246);\n        border: 1px solid rgb(209 213 219);\n        color: rgb(55 65 81);\n      }\n      .copy-btn:hover {\n        background-color: rgb(229 231 235);\n      }\n    "],"uses":{"params":["slug"]}}]}
