{"type":"data","nodes":[null,null,{"type":"data","data":[{"title":1,"description":2,"code":3,"frontmatter":4,"css":5},"Best Practices","대규모 프로젝트 모범 사례","\u003Ch1>🏆 AdorableCSS Best Practices\u003C/h1>\n\u003Cblockquote class=\"border-l(4/gray-300) pl(lg) my(xl) italic c(gray-700)\">\u003Cp>대규모 프로젝트에서의 모범 사례\u003C/p>\n\u003C/blockquote>\n\u003Ch2>🎯 핵심 원칙\u003C/h2>\n\u003Ch3>1. \u003Cstrong>의미론적 우선 (Semantic First)\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ 유틸리티 나열 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;font(2xl) bold line-height(1.2) mb(lg) c(gray-900)&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ 의미론적 클래스 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(xl)&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. \u003Cstrong>컴포넌트 추상화 (Component Abstraction)\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ 반복되는 패턴 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;bg(white) p(xl) r(lg) shadow(md)&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;bg(white) p(xl) r(lg) shadow(md)&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ 재사용 가능한 컴포넌트 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;card&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>3. \u003Cstrong>일관성 유지 (Consistency)\u003C/strong>\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ 혼재된 스타일 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">style\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;margin: 20px&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;p(md)&quot;\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;m(20px) p(md)&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ 토큰 시스템 준수 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;m(lg) p(md)&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>📐 아키텍처 패턴\u003C/h2>\n\u003Ch3>1. 레이어드 구조\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-text\">🎨 Theme Layer (CSS Variables)\n  ↓\n📦 Component Layer (재사용 컴포넌트)\n  ↓\n🔧 Utility Layer (AdorableCSS 유틸리티)\n  ↓\n💻 Implementation Layer (실제 구현)\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 컴포넌트 계층\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-typescript\">\u003Cspan class=\"hljs-comment\">// 1. Base Components (atoms)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title function_\">Button\u003C/span> = (\u003Cspan class=\"hljs-params\">{ variant, size, children }\u003C/span>) =&gt; (\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">button\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">{cx(\u003C/span>\n    &#x27;\u003Cspan class=\"hljs-attr\">btn\u003C/span>&#x27;,\n    \u003Cspan class=\"hljs-attr\">variants\u003C/span>[\u003Cspan class=\"hljs-attr\">variant\u003C/span>],\n    \u003Cspan class=\"hljs-attr\">sizes\u003C/span>[\u003Cspan class=\"hljs-attr\">size\u003C/span>]\n  )}&gt;\u003C/span>\n    {children}\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">button\u003C/span>&gt;\u003C/span>\u003C/span>\n)\n\n\u003Cspan class=\"hljs-comment\">// 2. Composite Components (molecules)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title function_\">Card\u003C/span> = (\u003Cspan class=\"hljs-params\">{ title, children }\u003C/span>) =&gt; (\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;card&quot;\u003C/span>&gt;\u003C/span>\n    {title &amp;&amp; \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h3\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;heading(md)&quot;\u003C/span>&gt;\u003C/span>{title}\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h3\u003C/span>&gt;\u003C/span>}\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;vbox gap(md)&quot;\u003C/span>&gt;\u003C/span>\n      {children}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n)\n\n\u003Cspan class=\"hljs-comment\">// 3. Layout Components (organisms)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title function_\">PageLayout\u003C/span> = (\u003Cspan class=\"hljs-params\">{ sidebar, main }\u003C/span>) =&gt; (\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox min-h(screen)&quot;\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">aside\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;w(260px) hidden lg:block&quot;\u003C/span>&gt;\u003C/span>\n      {sidebar}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">aside\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">main\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;flex(1)&quot;\u003C/span>&gt;\u003C/span>\n      {main}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">main\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n)\n\u003C/code>\u003C/pre>\n\u003Ch2>🎨 스타일링 전략\u003C/h2>\n\u003Ch3>1. 클래스 구성 순서\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;\n  [1. 컴포넌트] card\n  [2. 레이아웃] hbox(middle)\n  [3. 크기] w(full) h(200)\n  [4. 스타일] bg(white) shadow(md)\n  [5. 상태] hover:shadow(lg)\n  [6. 반응형] md:h(300)\n&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 조건부 스타일링 패턴\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 유틸리티 함수\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title function_\">cls\u003C/span> = (\u003Cspan class=\"hljs-params\">...classes\u003C/span>) =&gt; classes.\u003Cspan class=\"hljs-title function_\">filter\u003C/span>(\u003Cspan class=\"hljs-title class_\">Boolean\u003C/span>).\u003Cspan class=\"hljs-title function_\">join\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27; &#x27;\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">// 사용 예시\u003C/span>\n\u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">Alert\u003C/span>(\u003Cspan class=\"hljs-params\">{ type, children }\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">const\u003C/span> styles = {\n    \u003Cspan class=\"hljs-attr\">info\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;bg(blue-50) bc(blue-200) c(blue-800)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">warning\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;bg(yellow-50) bc(yellow-200) c(yellow-800)&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">error\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;bg(red-50) bc(red-200) c(red-800)&#x27;\u003C/span>\n  }\n  \n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">{cls(\u003C/span>\n      &#x27;\u003Cspan class=\"hljs-attr\">p\u003C/span>(\u003Cspan class=\"hljs-attr\">md\u003C/span>) \u003Cspan class=\"hljs-attr\">r\u003C/span>(\u003Cspan class=\"hljs-attr\">md\u003C/span>) \u003Cspan class=\"hljs-attr\">b\u003C/span>(\u003Cspan class=\"hljs-attr\">1\u003C/span>)&#x27;,\n      \u003Cspan class=\"hljs-attr\">styles\u003C/span>[\u003Cspan class=\"hljs-attr\">type\u003C/span>]\n    )}&gt;\u003C/span>\n      {children}\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 테마 시스템\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* themes/default.css */\u003C/span>\n\u003Cspan class=\"hljs-selector-pseudo\">:root\u003C/span> {\n  \u003Cspan class=\"hljs-comment\">/* 색상 팔레트 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--color-primary\u003C/span>: \u003Cspan class=\"hljs-built_in\">oklch\u003C/span>(\u003Cspan class=\"hljs-number\">60%\u003C/span> \u003Cspan class=\"hljs-number\">0.15\u003C/span> \u003Cspan class=\"hljs-number\">250\u003C/span>);\n  \u003Cspan class=\"hljs-attr\">--color-secondary\u003C/span>: \u003Cspan class=\"hljs-built_in\">oklch\u003C/span>(\u003Cspan class=\"hljs-number\">70%\u003C/span> \u003Cspan class=\"hljs-number\">0.1\u003C/span> \u003Cspan class=\"hljs-number\">350\u003C/span>);\n  \n  \u003Cspan class=\"hljs-comment\">/* 의미론적 색상 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--color-success\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-green-\u003Cspan class=\"hljs-number\">500\u003C/span>);\n  \u003Cspan class=\"hljs-attr\">--color-danger\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-red-\u003Cspan class=\"hljs-number\">500\u003C/span>);\n  \n  \u003Cspan class=\"hljs-comment\">/* 컴포넌트 토큰 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">--card-padding\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-space-xl);\n  \u003Cspan class=\"hljs-attr\">--card-radius\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-radius-lg);\n}\n\n\u003Cspan class=\"hljs-comment\">/* 다크 테마 */\u003C/span>\n\u003Cspan class=\"hljs-selector-attr\">[data-theme=\u003Cspan class=\"hljs-string\">&quot;dark&quot;\u003C/span>]\u003C/span> {\n  \u003Cspan class=\"hljs-attr\">--color-primary\u003C/span>: \u003Cspan class=\"hljs-built_in\">oklch\u003C/span>(\u003Cspan class=\"hljs-number\">70%\u003C/span> \u003Cspan class=\"hljs-number\">0.15\u003C/span> \u003Cspan class=\"hljs-number\">250\u003C/span>);\n  \u003Cspan class=\"hljs-attr\">--card-bg\u003C/span>: \u003Cspan class=\"hljs-built_in\">var\u003C/span>(--adorable-gray-\u003Cspan class=\"hljs-number\">800\u003C/span>);\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>🔄 상태 관리와 스타일\u003C/h2>\n\u003Ch3>1. 데이터 속성 활용\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 컴포넌트 상태 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \n  \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;tab-panel&quot;\u003C/span>\n  \u003Cspan class=\"hljs-attr\">data-state\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;active&quot;\u003C/span>\n  \u003Cspan class=\"hljs-attr\">data-orientation\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;horizontal&quot;\u003C/span>\n&gt;\u003C/span>\n  \u003Cspan class=\"hljs-comment\">&lt;!-- CSS에서 선택 --&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">style\u003C/span>&gt;\u003C/span>\u003Cspan class=\"language-css\">\n    \u003Cspan class=\"hljs-selector-class\">.tab-panel\u003C/span>\u003Cspan class=\"hljs-selector-attr\">[data-state=\u003Cspan class=\"hljs-string\">&quot;active&quot;\u003C/span>]\u003C/span> {\n      \u003Cspan class=\"hljs-keyword\">@apply\u003C/span> opacity(\u003Cspan class=\"hljs-number\">100\u003C/span>) visible;\n    }\n  \u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">style\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. CSS 변수로 동적 스타일\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 동적 진행률 바\u003C/span>\n\u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">ProgressBar\u003C/span>(\u003Cspan class=\"hljs-params\">{ value }\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">return\u003C/span> (\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \n      \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;h(8) bg(gray-200) r(full) clip&quot;\u003C/span>\n      \u003Cspan class=\"hljs-attr\">style\u003C/span>=\u003Cspan class=\"hljs-string\">{{\u003C/span> &#x27;\u003Cspan class=\"hljs-attr\">--progress\u003C/span>&#x27;\u003Cspan class=\"hljs-attr\">:\u003C/span> `${\u003Cspan class=\"hljs-attr\">value\u003C/span>}%` }}\n    &gt;\u003C/span>\n      \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;h(full) bg(blue-500) w(--progress) transition&quot;\u003C/span> /&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n  )\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>📱 반응형 디자인\u003C/h2>\n\u003Ch3>1. 모바일 우선 접근\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- 기본: 모바일 → 점진적 향상 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;\n  grid(1)          /* 모바일: 1열 */\n  sm:grid(2)       /* 작은 화면: 2열 */\n  md:grid(3)       /* 중간 화면: 3열 */\n  lg:grid(4)       /* 큰 화면: 4열 */\n  gap(md)          /* 기본 간격 */\n  lg:gap(xl)       /* 큰 화면: 넓은 간격 */\n&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 컨테이너 쿼리 준비\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-css\">\u003Cspan class=\"hljs-comment\">/* 미래 대비 */\u003C/span>\n\u003Cspan class=\"hljs-selector-class\">.card-container\u003C/span> {\n  \u003Cspan class=\"hljs-attribute\">container-type\u003C/span>: inline-size;\n}\n\n\u003Cspan class=\"hljs-selector-class\">.card\u003C/span> {\n  \u003Cspan class=\"hljs-keyword\">@apply\u003C/span> p(md);\n  \n  \u003Cspan class=\"hljs-keyword\">@container\u003C/span> (\u003Cspan class=\"hljs-attribute\">min-width\u003C/span>: \u003Cspan class=\"hljs-number\">400px\u003C/span>) {\n    \u003Cspan class=\"hljs-keyword\">@apply\u003C/span> p(xl) \u003Cspan class=\"hljs-attribute\">grid\u003C/span>(\u003Cspan class=\"hljs-number\">2\u003C/span>);\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>🚀 성능 최적화\u003C/h2>\n\u003Ch3>1. 클래스 재사용\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// ❌ 동적 클래스 생성\u003C/span>\nitems.\u003Cspan class=\"hljs-title function_\">map\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">item\u003C/span> =&gt;\u003C/span> \u003Cspan class=\"hljs-string\">`p(\u003Cspan class=\"hljs-subst\">${item.padding}\u003C/span>)`\u003C/span>)\n\n\u003Cspan class=\"hljs-comment\">// ✅ 정적 클래스 매핑\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> paddingMap = {\n  \u003Cspan class=\"hljs-attr\">small\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;p(sm)&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-attr\">medium\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;p(md)&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-attr\">large\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;p(lg)&#x27;\u003C/span>\n}\nitems.\u003Cspan class=\"hljs-title function_\">map\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">item\u003C/span> =&gt;\u003C/span> paddingMap[item.\u003Cspan class=\"hljs-property\">size\u003C/span>])\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 컴포넌트 메모이제이션\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// React 예시\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title class_\">ExpensiveCard\u003C/span> = \u003Cspan class=\"hljs-title function_\">memo\u003C/span>(\u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">{ data }\u003C/span>) =&gt;\u003C/span> (\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;card hover:shadow(xl) transition&quot;\u003C/span>&gt;\u003C/span>\n    {/* 복잡한 렌더링 */}\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>\n))\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 레이지 로딩\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 대형 컴포넌트 지연 로딩\u003C/span>\n\u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title class_\">HeavyComponent\u003C/span> = \u003Cspan class=\"hljs-title function_\">lazy\u003C/span>(\u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> \u003Cspan class=\"hljs-keyword\">import\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;./HeavyComponent&#x27;\u003C/span>))\n\n\u003Cspan class=\"hljs-comment\">// 사용\u003C/span>\n&lt;\u003Cspan class=\"hljs-title class_\">Suspense\u003C/span> fallback={\u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;animate(pulse)&quot;\u003C/span>&gt;\u003C/span>Loading...\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\u003C/span>}&gt;\n  \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">HeavyComponent\u003C/span> /&gt;\u003C/span>\u003C/span>\n&lt;/\u003Cspan class=\"hljs-title class_\">Suspense\u003C/span>&gt;\n\u003C/code>\u003C/pre>\n\u003Ch2>🧩 컴포넌트 라이브러리\u003C/h2>\n\u003Ch3>1. 기본 구조\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-text\">components/\n├── primitives/         # 기본 요소\n│   ├── Button/\n│   │   ├── Button.tsx\n│   │   ├── Button.stories.tsx\n│   │   └── Button.test.tsx\n│   └── Input/\n├── patterns/          # 조합 패턴\n│   ├── Card/\n│   └── Modal/\n└── layouts/          # 레이아웃\n    ├── Stack/\n    └── Grid/\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 컴포넌트 문서화\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-typescript\">\u003Cspan class=\"hljs-keyword\">interface\u003C/span> \u003Cspan class=\"hljs-title class_\">ButtonProps\u003C/span> {\n  \u003Cspan class=\"hljs-comment\">/** 버튼 변형 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">variant\u003C/span>?: \u003Cspan class=\"hljs-string\">&#x27;primary&#x27;\u003C/span> | \u003Cspan class=\"hljs-string\">&#x27;secondary&#x27;\u003C/span> | \u003Cspan class=\"hljs-string\">&#x27;danger&#x27;\u003C/span>\n  \u003Cspan class=\"hljs-comment\">/** 버튼 크기 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">size\u003C/span>?: \u003Cspan class=\"hljs-string\">&#x27;sm&#x27;\u003C/span> | \u003Cspan class=\"hljs-string\">&#x27;md&#x27;\u003C/span> | \u003Cspan class=\"hljs-string\">&#x27;lg&#x27;\u003C/span>\n  \u003Cspan class=\"hljs-comment\">/** 전체 너비 */\u003C/span>\n  \u003Cspan class=\"hljs-attr\">fullWidth\u003C/span>?: \u003Cspan class=\"hljs-built_in\">boolean\u003C/span>\n}\n\n\u003Cspan class=\"hljs-comment\">/**\n * 기본 버튼 컴포넌트\n * \n * \u003Cspan class=\"hljs-doctag\">@example\u003C/span>\n * &lt;Button variant=&quot;primary&quot; size=&quot;md&quot;&gt;\n *   클릭하세요\n * &lt;/Button&gt;\n */\u003C/span>\n\u003Cspan class=\"hljs-keyword\">export\u003C/span> \u003Cspan class=\"hljs-keyword\">const\u003C/span> \u003Cspan class=\"hljs-title class_\">Button\u003C/span>: \u003Cspan class=\"hljs-variable constant_\">FC\u003C/span>&lt;\u003Cspan class=\"hljs-title class_\">ButtonProps\u003C/span>&gt; = \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">{ ... }\u003C/span>) =&gt;\u003C/span> { ... }\n\u003C/code>\u003C/pre>\n\u003Ch2>🔍 디버깅 전략\u003C/h2>\n\u003Ch3>1. 개발 도구 활용\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 개발 환경에서만 디버그 정보\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> (process.\u003Cspan class=\"hljs-property\">env\u003C/span>.\u003Cspan class=\"hljs-property\">NODE_ENV\u003C/span> === \u003Cspan class=\"hljs-string\">&#x27;development&#x27;\u003C/span>) {\n  \u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">log\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;Applied classes:&#x27;\u003C/span>, element.\u003Cspan class=\"hljs-property\">className\u003C/span>)\n  \u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">log\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;Computed styles:&#x27;\u003C/span>, \u003Cspan class=\"hljs-title function_\">getComputedStyle\u003C/span>(element))\n}\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 클래스 검증\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-javascript\">\u003Cspan class=\"hljs-comment\">// 클래스 유효성 검사\u003C/span>\n\u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-title function_\">validateClasses\u003C/span>(\u003Cspan class=\"hljs-params\">classes\u003C/span>) {\n  \u003Cspan class=\"hljs-keyword\">const\u003C/span> invalid = classes.\u003Cspan class=\"hljs-title function_\">filter\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">cls\u003C/span> =&gt;\u003C/span> \n    !\u003Cspan class=\"hljs-title function_\">isValidAdorableClass\u003C/span>(cls)\n  )\n  \n  \u003Cspan class=\"hljs-keyword\">if\u003C/span> (invalid.\u003Cspan class=\"hljs-property\">length\u003C/span> &gt; \u003Cspan class=\"hljs-number\">0\u003C/span>) {\n    \u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">warn\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;Invalid classes:&#x27;\u003C/span>, invalid)\n  }\n}\n\u003C/code>\u003C/pre>\n\u003Ch2>📋 체크리스트\u003C/h2>\n\u003Ch3>코드 리뷰 시\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>[ ] 의미론적 클래스를 우선 사용했는가?\u003C/li>\n\u003Cli>[ ] 반복되는 패턴은 컴포넌트화 했는가?\u003C/li>\n\u003Cli>[ ] 토큰 시스템을 준수했는가?\u003C/li>\n\u003Cli>[ ] 반응형 디자인이 적용되었는가?\u003C/li>\n\u003Cli>[ ] 접근성을 고려했는가?\u003C/li>\n\u003C/ul>\n\u003Ch3>프로덕션 배포 전\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>[ ] 불필요한 클래스는 제거했는가?\u003C/li>\n\u003Cli>[ ] 성능 프로파일링을 했는가?\u003C/li>\n\u003Cli>[ ] 크로스 브라우저 테스트를 했는가?\u003C/li>\n\u003Cli>[ ] 번들 크기를 확인했는가?\u003C/li>\n\u003C/ul>\n\u003Ch2>🚫 안티패턴\u003C/h2>\n\u003Ch3>1. 인라인 스타일 남용\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;p(20px) m(30px) w(250px)&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;p(lg) m(xl) w(64)&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>2. 과도한 중첩\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;hbox&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;grid grid-cols-3&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch3>3. 불필요한 !important\u003C/h3>\n\n  \u003Cpre>\u003Ccode class=\"hljs language-html\">\u003Cspan class=\"hljs-comment\">&lt;!-- ❌ --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;bg(red)! c(white)! p(md)!&quot;\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- ✅ Layer 시스템 활용 --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;error-message&quot;\u003C/span>&gt;\u003C/span>\n\u003C/code>\u003C/pre>\n\u003Ch2>🎯 마무리\u003C/h2>\n\u003Cp>AdorableCSS는 \u003Cstrong>도구\u003C/strong>입니다. 모든 상황에 맞는 만능 해결책은 아닙니다.\u003C/p>\n\u003Cp>\u003Cstrong>핵심은:\u003C/strong>\u003C/p>\n\u003Col class=\"list(decimal) pl(xl) my(lg)\">\u003Cli>팀과 일관된 규칙 유지\u003C/li>\n\u003Cli>의미 있는 추상화 만들기\u003C/li>\n\u003Cli>성능과 가독성의 균형\u003C/li>\n\u003Cli>지속적인 리팩토링\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cstrong>“Write CSS the way you think”\u003C/strong> - 생각하는 방식으로 CSS를 작성하되, 유지보수를 고려하세요.\u003C/p>\n\u003Chr>\n\u003Ch3>참고 자료\u003C/h3>\n\u003Cul class=\"list(disc) pl(xl) my(lg)\">\u003Cli>\u003Ca href=\"./TEAM_ONBOARDING.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">팀 온보딩\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"./PROJECT_SETUP.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">프로젝트 설정\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"./guides/troubleshooting.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">트러블슈팅\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"./guides/performance.md\"  class=\"c(blue-600) underline decoration(blue-200) hover:decoration(blue-500) transition(all/150ms)\">성능 가이드\u003C/a>\u003C/li>\n\u003C/ul>\n",{},"\n      /* Highlight.js Light Theme inspired by GitHub */\n      .hljs { background: rgb(249 250 251); color: #24292e; }\n      .hljs-comment, .hljs-quote { color: #6a737d; }\n      .hljs-keyword, .hljs-selector-tag, .hljs-literal { color: #d73a49; }\n      .hljs-string { color: #032f62; }\n      .hljs-number { color: #005cc5; }\n      .hljs-variable, .hljs-template-variable, .hljs-attr { color: #e36209; }\n      .hljs-name, .hljs-selector-class, .hljs-selector-id { color: #22863a; }\n      .hljs-title, .hljs-function { color: #6f42c1; }\n      .hljs-built_in { color: #005cc5; }\n      .hljs-params { color: #24292e; }\n      .hljs-meta { color: #005cc5; }\n      .hljs-emphasis { font-style: italic; }\n      .hljs-strong { font-weight: bold; }\n      .hljs-deletion { color: #b31d28; background-color: #ffeef0; }\n      .hljs-addition { color: #22863a; background-color: #f0fff4; }\n      \n      /* Code blocks */\n      pre { \n        background-color: rgb(249 250 251);\n        border: 1px solid rgb(229 231 235);\n      }\n      \n      /* Copy button */\n      .copy-btn {\n        background-color: rgb(243 244 246);\n        border: 1px solid rgb(209 213 219);\n        color: rgb(55 65 81);\n      }\n      .copy-btn:hover {\n        background-color: rgb(229 231 235);\n      }\n    "],"uses":{"params":["slug"]}}]}
